import { Generics, PureAbility } from '@casl/ability';
import { BasePrismaQuery, InferPrismaTypes } from './types';
/**
 * @deprecated use accessibleBy directly instead. It will infer the types from passed Ability instance.
 */
export declare const createAccessibleByFactory: <TResult extends Record<string, unknown>, TPrismaQuery>() => <TAbility extends PureAbility<any, TPrismaQuery>>(ability: TAbility, action?: TAbility["rules"][number]["action"]) => TResult;
export declare function accessibleBy<TAbility extends PureAbility<any, BasePrismaQuery>>(ability: TAbility, action?: TAbility["rules"][number]["action"]): InferPrismaTypes<Generics<TAbility>['conditions']>['WhereInput'];
