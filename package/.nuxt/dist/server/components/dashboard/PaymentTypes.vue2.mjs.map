{"version":3,"file":"PaymentTypes.vue2.mjs","sources":["../../../../../components/dashboard/PaymentTypes.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\n\n// 1. TypeScript Interfaces per una struttura dati chiara e sicura\ninterface Payment {\n  type: string;\n  count: number;\n  amount: number;\n}\n\ninterface DailyPaymentData {\n  date: string;\n  payments: Payment[];\n}\n\n// Interfaccia per i dati finali mostrati in tabella\ninterface PaymentStat extends Payment {\n  countPercentage: number;\n  amountPercentage: number;\n}\n\n// 2. Stato reattivo\nconst isLoading = ref(true);\nconst search = ref('');\nconst paymentData = ref<DailyPaymentData[]>([]);\nconst selectedDate = ref<string | null>(null);\nconst lastUpdate = ref('');\n\n// 3. Headers per v-data-table\nconst headers = [\n  { title: 'Tipo Pagamento', key: 'type', align: 'start' },\n  { title: 'N. Transazioni', key: 'count', align: 'center' },\n  { title: '% Transazioni', key: 'countPercentage', align: 'start', sortable: false },\n  { title: 'Importo Totale', key: 'amount', align: 'end' },\n  { title: '% Importo', key: 'amountPercentage', align: 'start', sortable: false },\n];\n\n// 4. Logica di calcolo (Computed Properties)\nconst availableDates = computed(() => {\n  return paymentData.value.map(day => {\n    const date = new Date(day.date);\n    return {\n      value: day.date,\n      title: date.toLocaleDateString('it-IT', { weekday: 'long', day: 'numeric', month: 'long' })\n    };\n  }).reverse(); // Mostra le date più recenti per prime\n});\n\nconst dailyTotals = computed(() => {\n  const dayData = paymentData.value.find(day => day.date === selectedDate.value);\n  if (!dayData) return { totalCount: 0, totalAmount: 0 };\n  \n  return dayData.payments.reduce((acc, payment) => {\n    acc.totalCount += payment.count;\n    acc.totalAmount += payment.amount;\n    return acc;\n  }, { totalCount: 0, totalAmount: 0 });\n});\n\n// Questa è la fonte dati finale per la tabella, già arricchita con le percentuali\nconst tableData = computed((): PaymentStat[] => {\n  const dayData = paymentData.value.find(day => day.date === selectedDate.value);\n  if (!dayData) return [];\n\n  const { totalCount, totalAmount } = dailyTotals.value;\n  if (totalCount === 0 || totalAmount === 0) return [];\n\n  return dayData.payments\n    .map(payment => ({\n      ...payment,\n      countPercentage: (payment.count / totalCount) * 100,\n      amountPercentage: (payment.amount / totalAmount) * 100,\n    }))\n    .sort((a, b) => b.amount - a.amount);\n});\n\n\n// 5. Funzioni Helper e Azioni\nconst getPaymentIcon = (type: string): string => {\n  const icons: { [key: string]: string } = {\n    'Carta di Credito': 'mdi-credit-card-outline',\n    'PayPal': 'mdi-paypal',\n    'Bonifico': 'mdi-bank-outline',\n    'Contanti': 'mdi-cash-multiple',\n    'Satispay': 'mdi-cellphone',\n  };\n  return icons[type] || 'mdi-help-circle-outline';\n};\n\nconst formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'EUR' }).format(value);\n};\n\nconst exportToCSV = () => { /* La tua logica CSV va bene, puoi semplificarla usando tableData */ };\nconst exportToPDF = () => alert('Funzionalità PDF in sviluppo');\nconst refreshData = () => {\n  lastUpdate.value = new Date().toLocaleString('it-IT');\n};\n\n// 6. Lifecycle\nonMounted(() => {\n  setTimeout(() => {\n    paymentData.value = [ // Dati mock\n        { date: '2025-10-07', payments: [ { type: 'Carta di Credito', count: 45, amount: 2250.50 }, { type: 'PayPal', count: 22, amount: 1100.75 }, { type: 'Bonifico', count: 8, amount: 1600.00 }, { type: 'Contanti', count: 15, amount: 450.25 }, { type: 'Satispay', count: 12, amount: 360.00 } ] },\n        { date: '2025-10-08', payments: [ { type: 'Carta di Credito', count: 42, amount: 2100.25 }, { type: 'PayPal', count: 20, amount: 980.50 }, { type: 'Bonifico', count: 6, amount: 1200.00 }, { type: 'Contanti', count: 18, amount: 540.75 }, { type: 'Satispay', count: 14, amount: 420.00 } ] },\n        { date: '2025-10-09', payments: [ { type: 'Carta di Credito', count: 48, amount: 2400.00 }, { type: 'PayPal', count: 25, amount: 1250.25 }, { type: 'Bonifico', count: 10, amount: 2000.00 }, { type: 'Contanti', count: 12, amount: 360.50 }, { type: 'Satispay', count: 15, amount: 450.00 } ] },\n        { date: '2025-10-10', payments: [ { type: 'Carta di Credito', count: 40, amount: 2000.00 }, { type: 'PayPal', count: 18, amount: 900.00 }, { type: 'Bonifico', count: 5, amount: 1000.00 }, { type: 'Contanti', count: 20, amount: 600.00 }, { type: 'Satispay', count: 10, amount: 300.00 } ] },\n        { date: '2025-10-11', payments: [ { type: 'Carta di Credito', count: 50, amount: 2500.00 }, { type: 'PayPal', count: 28, amount: 1400.00 }, { type: 'Bonifico', count: 12, amount: 2400.00 }, { type: 'Contanti', count: 10, amount: 300.00 }, { type: 'Satispay', count: 18, amount: 540.00 } ] }\n    ];\n    // Imposta la data di default all'ultima disponibile (oggi)\n    if (paymentData.value.length > 0) {\n      selectedDate.value = paymentData.value[paymentData.value.length - 1].date;\n    }\n    lastUpdate.value = new Date().toLocaleString('it-IT');\n    isLoading.value = false;\n  }, 1000);\n});\n</script>\n\n<template>\n  <v-card>\n    <v-card-item class=\"pa-4 pa-md-6\">\n       <div class=\"d-flex flex-wrap align-center gap-4\">\n        <div>\n          <h2 class=\"text-h5\">Statistiche Metodi di Pagamento</h2>\n          <p class=\"text-subtitle-1 text-medium-emphasis\">Dati aggregati per giorno</p>\n        </div>\n        <v-spacer></v-spacer>\n        <div class=\"d-flex flex-wrap align-center gap-2\">\n          <v-select\n            v-model=\"selectedDate\"\n            :items=\"availableDates\"\n            label=\"Seleziona Giorno\"\n            density=\"compact\"\n            variant=\"outlined\"\n            hide-details\n            style=\"min-width: 240px;\"\n          ></v-select>\n           <v-menu>\n            <template v-slot:activator=\"{ props }\">\n                <v-btn icon=\"mdi-dots-vertical\" v-bind=\"props\" title=\"Altre azioni\"></v-btn>\n            </template>\n            <v-list>\n                <v-list-item @click=\"refreshData\" prepend-icon=\"mdi-refresh\">Aggiorna</v-list-item>\n                <v-list-item @click=\"exportToCSV\" prepend-icon=\"mdi-file-delimited\">Esporta CSV</v-list-item>\n                <v-list-item @click=\"exportToPDF\" prepend-icon=\"mdi-file-pdf-box\">Esporta PDF</v-list-item>\n            </v-list>\n          </v-menu>\n        </div>\n      </div>\n\n      <v-row class=\"mt-4\">\n        <v-col cols=\"12\" sm=\"6\">\n            <v-card variant=\"tonal\" class=\"pa-4 text-center h-100\">\n                <div class=\"text-overline\">Totale Transazioni</div>\n                <div class=\"text-h3 font-weight-bold\">{{ dailyTotals.totalCount }}</div>\n            </v-card>\n        </v-col>\n        <v-col cols=\"12\" sm=\"6\">\n            <v-card variant=\"tonal\" color=\"success\" class=\"pa-4 text-center h-100\">\n                <div class=\"text-overline\">Importo Totale Incassato</div>\n                <div class=\"text-h3 font-weight-bold\">{{ formatCurrency(dailyTotals.totalAmount) }}</div>\n            </v-card>\n        </v-col>\n      </v-row>\n    </v-card-item>\n    \n    <v-divider></v-divider>\n\n     <v-text-field\n        v-model=\"search\"\n        label=\"Cerca metodo di pagamento...\"\n        prepend-inner-icon=\"mdi-magnify\"\n        variant=\"solo-filled\"\n        flat hide-details single-line\n    ></v-text-field>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"tableData\"\n      :search=\"search\"\n      :loading=\"isLoading\"\n      item-value=\"type\"\n      class=\"elevation-0\"\n    >\n        <template v-slot:loading>\n            <v-skeleton-loader type=\"table-row@5\"></v-skeleton-loader>\n        </template>\n        \n        <template v-slot:item.type=\"{ item }\">\n            <div class=\"d-flex align-center font-weight-bold py-2\">\n                <v-icon :icon=\"getPaymentIcon(item.type)\" class=\"me-3\" size=\"24\"></v-icon>\n                <span>{{ item.type }}</span>\n            </div>\n        </template>\n        \n        <template v-slot:item.countPercentage=\"{ value }\">\n            <div style=\"min-width: 120px;\">\n                <v-progress-linear :model-value=\"value\" color=\"primary\" height=\"8\" rounded></v-progress-linear>\n                <span class=\"text-caption text-medium-emphasis\">{{ value.toFixed(1) }}%</span>\n            </div>\n        </template>\n        \n        <template v-slot:item.amount=\"{ value }\">\n            <span class=\"font-weight-bold\">{{ formatCurrency(value) }}</span>\n        </template>\n        \n        <template v-slot:item.amountPercentage=\"{ value }\">\n            <div style=\"min-width: 120px;\">\n                <v-progress-linear :model-value=\"value\" color=\"success\" height=\"8\" rounded></v-progress-linear>\n                <span class=\"text-caption text-medium-emphasis\">{{ value.toFixed(1) }}%</span>\n            </div>\n        </template>\n        \n        <template v-slot:no-data>\n            <div class=\"pa-4 text-center\">Nessun dato trovato per la data selezionata.</div>\n        </template>\n    </v-data-table>\n  </v-card>\n</template>\n\n<style scoped>\n.gap-2 { gap: 8px; }\n.gap-4 { gap: 16px; }\n</style>"],"names":[],"mappings":";;;;;;AAsBM,UAAA,YAAY,IAAI,IAAI;AACpB,UAAA,SAAS,IAAI,EAAE;AACf,UAAA,cAAc,IAAwB,EAAE;AACxC,UAAA,eAAe,IAAmB,IAAI;AACtC,UAAA,aAAa,IAAI,EAAE;AAGzB,UAAM,UAAU;AAAA,MACd,EAAE,OAAO,kBAAkB,KAAK,QAAQ,OAAO,QAAQ;AAAA,MACvD,EAAE,OAAO,kBAAkB,KAAK,SAAS,OAAO,SAAS;AAAA,MACzD,EAAE,OAAO,iBAAiB,KAAK,mBAAmB,OAAO,SAAS,UAAU,MAAM;AAAA,MAClF,EAAE,OAAO,kBAAkB,KAAK,UAAU,OAAO,MAAM;AAAA,MACvD,EAAE,OAAO,aAAa,KAAK,oBAAoB,OAAO,SAAS,UAAU,MAAM;AAAA,IACjF;AAGM,UAAA,iBAAiB,SAAS,MAAM;AAC7B,aAAA,YAAY,MAAM,IAAI,CAAO,QAAA;AAClC,cAAM,OAAO,IAAI,KAAK,IAAI,IAAI;AACvB,eAAA;AAAA,UACL,OAAO,IAAI;AAAA,UACX,OAAO,KAAK,mBAAmB,SAAS,EAAE,SAAS,QAAQ,KAAK,WAAW,OAAO,OAAQ,CAAA;AAAA,QAC5F;AAAA,MACD,CAAA,EAAE,QAAQ;AAAA,IAAA,CACZ;AAEK,UAAA,cAAc,SAAS,MAAM;AAC3B,YAAA,UAAU,YAAY,MAAM,KAAK,SAAO,IAAI,SAAS,aAAa,KAAK;AAC7E,UAAI,CAAC,QAAS,QAAO,EAAE,YAAY,GAAG,aAAa,EAAE;AAErD,aAAO,QAAQ,SAAS,OAAO,CAAC,KAAK,YAAY;AAC/C,YAAI,cAAc,QAAQ;AAC1B,YAAI,eAAe,QAAQ;AACpB,eAAA;AAAA,SACN,EAAE,YAAY,GAAG,aAAa,GAAG;AAAA,IAAA,CACrC;AAGK,UAAA,YAAY,SAAS,MAAqB;AACxC,YAAA,UAAU,YAAY,MAAM,KAAK,SAAO,IAAI,SAAS,aAAa,KAAK;AACzE,UAAA,CAAC,QAAS,QAAO,CAAC;AAEtB,YAAM,EAAE,YAAY,YAAY,IAAI,YAAY;AAChD,UAAI,eAAe,KAAK,gBAAgB,UAAU,CAAC;AAE5C,aAAA,QAAQ,SACZ,IAAI,CAAY,aAAA;AAAA,QACf,GAAG;AAAA,QACH,iBAAkB,QAAQ,QAAQ,aAAc;AAAA,QAChD,kBAAmB,QAAQ,SAAS,cAAe;AAAA,MAAA,EACnD,EACD,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM;AAAA,IAAA,CACtC;AAIK,UAAA,iBAAiB,CAAC,SAAyB;AAC/C,YAAM,QAAmC;AAAA,QACvC,oBAAoB;AAAA,QACpB,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,MACd;AACO,aAAA,MAAM,IAAI,KAAK;AAAA,IACxB;AAEM,UAAA,iBAAiB,CAAC,UAAkB;AACtC,aAAO,IAAI,KAAK,aAAa,SAAS,EAAE,OAAO,YAAY,UAAU,MAAM,CAAC,EAAE,OAAO,KAAK;AAAA,IAC9F;AAEA,UAAM,cAAc,MAAM;AAAA,IAAuE;AAC3F,UAAA,cAAc,MAAM,MAAM,8BAA8B;AAC9D,UAAM,cAAc,MAAM;AACxB,iBAAW,SAAQ,oBAAI,KAAK,GAAE,eAAe,OAAO;AAAA,IACt}