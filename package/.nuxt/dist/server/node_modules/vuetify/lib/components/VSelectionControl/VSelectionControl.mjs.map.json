{"file":"VSelectionControl.mjs","mappings":";;;;;;;;;;;;;;;AAeY,MAAC,6BAA6B,aAAa;AAAA,EACrD,OAAO;AAAA,EACP,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,GAAG,mBAAoB;AAAA,EACvB,GAAG,+BAA8B;AACnC,GAAG,mBAAmB;AACf,SAAS,oBAAoB,OAAO;AACzC,QAAM,QAAQ,OAAO,8BAA8B,MAAS;AAC5D,QAAM;AAAA,IACJ;AAAA,EACJ,IAAM,WAAW,KAAK;AACpB,QAAM,aAAa,gBAAgB,OAAO,YAAY;AACtD,QAAM,YAAY,SAAS,MAAM,MAAM,cAAc,SAAY,MAAM,YAAY,MAAM,UAAU,SAAY,MAAM,QAAQ,IAAI;AACjI,QAAM,aAAa,SAAS,MAAM,MAAM,eAAe,SAAY,MAAM,aAAa,KAAK;AAC3F,QAAM,aAAa,SAAS,MAAM,CAAC,CAAC,MAAM,YAAY,MAAM,YAAY,QAAQ,MAAM,QAAQ,WAAW,KAAK,CAAC;AAC/G,QAAM,QAAQ,SAAS;AAAA,IACrB,MAAM;AACJ,YAAM,MAAM,QAAQ,MAAM,WAAW,QAAQ,WAAW;AACxD,aAAO,WAAW,QAAQ,YAAY,GAAG,EAAE,KAAK,OAAK,MAAM,gBAAgB,GAAG,UAAU,KAAK,CAAC,IAAI,MAAM,gBAAgB,KAAK,UAAU,KAAK;AAAA,IAC7I;AAAA,IACD,IAAI,KAAK;AACP,UAAI,MAAM,SAAU;AACpB,YAAM,eAAe,MAAM,UAAU,QAAQ,WAAW;AACxD,UAAI,SAAS;AACb,UAAI,WAAW,OAAO;AACpB,iBAAS,MAAM,CAAC,GAAG,YAAY,WAAW,KAAK,GAAG,YAAY,IAAI,YAAY,WAAW,KAAK,EAAE,OAAO,UAAQ,CAAC,MAAM,gBAAgB,MAAM,UAAU,KAAK,CAAC;AAAA,MACpK;AACM,UAAI,OAAO;AACT,cAAM,WAAW,QAAQ;AAAA,MACjC,OAAa;AACL,mBAAW,QAAQ;AAAA,MAC3B;AAAA,IACA;AAAA,EACA,CAAG;AACD,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACJ,IAAM,aAAa,SAAS,MAAM;AAC9B,QAAI,MAAM,SAAS,MAAM,SAAU,QAAO;AAC1C,WAAO,MAAM,QAAQ,MAAM,QAAQ,MAAM;AAAA,EAC7C,CAAG,CAAC;AACF,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACJ,IAAM,mBAAmB,SAAS,MAAM;AACpC,WAAO,MAAM,SAAS,CAAC,MAAM,SAAS,CAAC,MAAM,WAAW,MAAM,QAAQ,MAAM;AAAA,EAChF,CAAG,CAAC;AACF,QAAM,OAAO,SAAS,MAAM,MAAM,QAAQ,MAAM,WAAW,MAAM,SAAS;AAC1E,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACH;AACY,MAAC,oBAAoB,iBAAgB,EAAG;AAAA,EAClD,MAAM;AAAA,EACN,YAAY;AAAA,IACV;AAAA,EACD;AAAA,EACD,cAAc;AAAA,EACd,OAAO,2BAA4B;AAAA,EACnC,OAAO;AAAA,IACL,qBAAqB,WAAS;AAAA,EAC/B;AAAA,EACD,MAAM,OAAO,MAAM;AACjB,QAAI;AAAA,MACF;AAAA,MACA;AAAA,IACN,IAAQ;AACJ,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN,IAAQ,oBAAoB,KAAK;AAC7B,UAAM,MAAM,OAAQ;AACpB,UAAM,YAAY,WAAW,KAAK;AAClC,UAAM,iBAAiB,WAAW,KAAK;AACvC,UAAM,QAAQ,IAAK;AACnB,UAAM,KAAK,SAAS,MAAM,MAAM,MAAM,SAAS,GAAG,EAAE;AACpD,UAAM,gBAAgB,SAAS,MAAM,CAAC,MAAM,YAAY,CAAC,MAAM,QAAQ;AACvE,mCAAO,cAAc,MAAM;AACzB,UAAI,MAAM,OAAO;AACf,cAAM,MAAM,UAAU,MAAM;AAAA,MACpC;AAAA,IACA;AACI,aAAS,QAAQ,GAAG;AAClB,UAAI,CAAC,cAAc,MAAO;AAC1B,gBAAU,QAAQ;AAClB,UAAI,gBAAgB,EAAE,MAAwB,MAAM,OAAO;AACzD,uBAAe,QAAQ;AAAA,MAC/B;AAAA,IACA;AACI,aAAS,SAAS;AAChB,gBAAU,QAAQ;AAClB,qBAAe,QAAQ;AAAA,IAC7B;AACI,aAAS,aAAa,GAAG;AACvB,QAAE,gBAAiB;AAAA,IACzB;AACI,aAAS,QAAQ,GAAG;AAClB,UAAI,CAAC,cAAc,OAAO;AACxB,YAAI,MAAM,OAAO;AAIf,gBAAM,MAAM,UAAU,MAAM;AAAA,QACtC;AACQ;AAAA,MACR;AACM,UAAI,MAAM,YAAY,OAAO;AAC3B,iBAAS,MAAM,MAAM,aAAa;AAAA,MAC1C;AACM,YAAM,QAAQ,EAAE,OAAO;AAAA,IAC7B;AACI,cAAU,MAAM;;AACd,YAAM,QAAQ,MAAM,QAAQ,MAAM,MAAM;AAAA,QACtC,OAAO,MAAM;AAAA,QACb,OAAO;AAAA,UACL,KAAK,GAAG;AAAA,QAClB;AAAA,MACA,CAAO,IAAI,MAAM;AACX,YAAM,CAAC,WAAW,UAAU,IAAI,iBAAiB,KAAK;AACtD,YAAM,YAAYA,YAAa,SAASC,WAAY;AAAA,QAClD,OAAO;AAAA,QACP,WAAW,MAAM;AAAA,QACjB,YAAY,CAAC,CAAC,MAAM;AAAA,QACpB,MAAM,GAAG;AAAA,QACT,UAAU;AAAA,QACV,WAAW;AAAA,QACX,WAAW;AAAA,QACX,iBAAiB,CAAC,CAAC,MAAM;AAAA,QACzB,cAAc,MAAM;AAAA,QACpB,QAAQ,MAAM;AAAA,QACd,SAAS,UAAU;AAAA,QACnB,QAAQ,MAAM;AAAA,QACd,gBAAgB,MAAM,SAAS,aAAa,MAAM,QAAQ;AAAA,MAClE,GAAS,UAAU,GAAG,IAAI;AACpB,aAAOD,YAAa,OAAOC,WAAY;AAAA,QACrC,SAAS,CAAC,uBAAuB;AAAA,UAC/B,8BAA8B,MAAM;AAAA,UACpC,iCAAiC,MAAM;AAAA,UACvC,8BAA8B,MAAM;AAAA,UACpC,gCAAgC,UAAU;AAAA,UAC1C,sCAAsC,eAAe;AAAA,UACrD,+BAA+B,MAAM;AAAA,QAC/C,GAAW,eAAe,OAAO,MAAM,KAAK;AAAA,MACrC,GAAE,WAAW;AAAA,QACZ,SAAS,MAAM;AAAA,MACvB,CAAO,GAAG,CAACD,YAAa,OAAO;AAAA,QACvB,SAAS,CAAC,gCAAgC,iBAAiB,KAAK;AAAA,QAChE,SAAS,gBAAgB;AAAA,MACjC,GAAS,EAAC,WAAM,YAAN,+BAAgB;AAAA,QAClB;AAAA,QACA;AAAA,MACR,IAAUE,eAAgBF,YAAa,OAAO;AAAA,QACtC,SAAS,CAAC,4BAA4B;AAAA,MAC9C,GAAS,GAAC,WAAM,UAAN,+BAAc;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,MAAM,KAAK;AAAA,QACX,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA,IAAI,GAAG;AAAA,QACjB;AAAA,MACA,OAAYA,YAAaG,UAAW,MAAM,CAAC,KAAK,SAASH,YAAa,OAAO;AAAA,QACrE,OAAO;AAAA,QACP,QAAQ,KAAK;AAAA,MACd,GAAE,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAACI,iBAAkB,QAAQ,GAAG,MAAM,UAAU,CAAC,CAAC,MAAM,YAAY,CAAC,MAAM,UAAU,MAAM,CAAC,UAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAASJ,YAAa,QAAQ;AAAA,QAC3K,OAAO,GAAG;AAAA,QACV,WAAW;AAAA,MACnB,GAAS;AAAA,QACD,SAAS,MAAM,CAAC,KAAK;AAAA,MACtB,CAAA,CAAC,CAAC;AAAA,IACT,CAAK;AACD,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACD;AAAA,EACL;AACA,CAAC;","names":["_createVNode","_mergeProps","_withDirectives","_Fragment","_resolveDirective"],"sources":["../../../../../../../../node_modules/vuetify/lib/components/VSelectionControl/VSelectionControl.mjs"],"sourcesContent":["import { mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\n// Styles\nimport \"./VSelectionControl.css\";\n\n// Components\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VLabel } from \"../VLabel/index.mjs\";\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from \"../VSelectionControlGroup/VSelectionControlGroup.mjs\"; // Composables\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { useDensity } from \"../../composables/density.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\nimport { computed, inject, nextTick, ref, shallowRef } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, matchesSelector, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeVSelectionControlProps = propsFactory({\n  label: String,\n  baseColor: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n  ...makeComponentProps(),\n  ...makeSelectionControlGroupProps()\n}, 'VSelectionControl');\nexport function useSelectionControl(props) {\n  const group = inject(VSelectionControlGroupSymbol, undefined);\n  const {\n    densityClasses\n  } = useDensity(props);\n  const modelValue = useProxiedModel(props, 'modelValue');\n  const trueValue = computed(() => props.trueValue !== undefined ? props.trueValue : props.value !== undefined ? props.value : true);\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false);\n  const isMultiple = computed(() => !!props.multiple || props.multiple == null && Array.isArray(modelValue.value));\n  const model = computed({\n    get() {\n      const val = group ? group.modelValue.value : modelValue.value;\n      return isMultiple.value ? wrapInArray(val).some(v => props.valueComparator(v, trueValue.value)) : props.valueComparator(val, trueValue.value);\n    },\n    set(val) {\n      if (props.readonly) return;\n      const currentValue = val ? trueValue.value : falseValue.value;\n      let newVal = currentValue;\n      if (isMultiple.value) {\n        newVal = val ? [...wrapInArray(modelValue.value), currentValue] : wrapInArray(modelValue.value).filter(item => !props.valueComparator(item, trueValue.value));\n      }\n      if (group) {\n        group.modelValue.value = newVal;\n      } else {\n        modelValue.value = newVal;\n      }\n    }\n  });\n  const {\n    textColorClasses,\n    textColorStyles\n  } = useTextColor(computed(() => {\n    if (props.error || props.disabled) return undefined;\n    return model.value ? props.color : props.baseColor;\n  }));\n  const {\n    backgroundColorClasses,\n    backgroundColorStyles\n  } = useBackgroundColor(computed(() => {\n    return model.value && !props.error && !props.disabled ? props.color : props.baseColor;\n  }));\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon);\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    backgroundColorClasses,\n    backgroundColorStyles,\n    icon\n  };\n}\nexport const VSelectionControl = genericComponent()({\n  name: 'VSelectionControl',\n  directives: {\n    Ripple\n  },\n  inheritAttrs: false,\n  props: makeVSelectionControlProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      backgroundColorClasses,\n      backgroundColorStyles,\n      trueValue\n    } = useSelectionControl(props);\n    const uid = getUid();\n    const isFocused = shallowRef(false);\n    const isFocusVisible = shallowRef(false);\n    const input = ref();\n    const id = computed(() => props.id || `input-${uid}`);\n    const isInteractive = computed(() => !props.disabled && !props.readonly);\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value;\n      }\n    });\n    function onFocus(e) {\n      if (!isInteractive.value) return;\n      isFocused.value = true;\n      if (matchesSelector(e.target, ':focus-visible') !== false) {\n        isFocusVisible.value = true;\n      }\n    }\n    function onBlur() {\n      isFocused.value = false;\n      isFocusVisible.value = false;\n    }\n    function onClickLabel(e) {\n      e.stopPropagation();\n    }\n    function onInput(e) {\n      if (!isInteractive.value) {\n        if (input.value) {\n          // model value is not updated when input is not interactive\n          // but the internal checked state of the input is still updated,\n          // so here it's value is restored\n          input.value.checked = model.value;\n        }\n        return;\n      }\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate());\n      }\n      model.value = e.target.checked;\n    }\n    useRender(() => {\n      const label = slots.label ? slots.label({\n        label: props.label,\n        props: {\n          for: id.value\n        }\n      }) : props.label;\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const inputNode = _createVNode(\"input\", _mergeProps({\n        \"ref\": input,\n        \"checked\": model.value,\n        \"disabled\": !!props.disabled,\n        \"id\": id.value,\n        \"onBlur\": onBlur,\n        \"onFocus\": onFocus,\n        \"onInput\": onInput,\n        \"aria-disabled\": !!props.disabled,\n        \"aria-label\": props.label,\n        \"type\": props.type,\n        \"value\": trueValue.value,\n        \"name\": props.name,\n        \"aria-checked\": props.type === 'checkbox' ? model.value : undefined\n      }, inputAttrs), null);\n      return _createVNode(\"div\", _mergeProps({\n        \"class\": ['v-selection-control', {\n          'v-selection-control--dirty': model.value,\n          'v-selection-control--disabled': props.disabled,\n          'v-selection-control--error': props.error,\n          'v-selection-control--focused': isFocused.value,\n          'v-selection-control--focus-visible': isFocusVisible.value,\n          'v-selection-control--inline': props.inline\n        }, densityClasses.value, props.class]\n      }, rootAttrs, {\n        \"style\": props.style\n      }), [_createVNode(\"div\", {\n        \"class\": ['v-selection-control__wrapper', textColorClasses.value],\n        \"style\": textColorStyles.value\n      }, [slots.default?.({\n        backgroundColorClasses,\n        backgroundColorStyles\n      }), _withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-selection-control__input']\n      }, [slots.input?.({\n        model,\n        textColorClasses,\n        textColorStyles,\n        backgroundColorClasses,\n        backgroundColorStyles,\n        inputNode,\n        icon: icon.value,\n        props: {\n          onFocus,\n          onBlur,\n          id: id.value\n        }\n      }) ?? _createVNode(_Fragment, null, [icon.value && _createVNode(VIcon, {\n        \"key\": \"icon\",\n        \"icon\": icon.value\n      }, null), inputNode])]), [[_resolveDirective(\"ripple\"), props.ripple && [!props.disabled && !props.readonly, null, ['center', 'circle']]]])]), label && _createVNode(VLabel, {\n        \"for\": id.value,\n        \"onClick\": onClickLabel\n      }, {\n        default: () => [label]\n      })]);\n    });\n    return {\n      isFocused,\n      input\n    };\n  }\n});\n//# sourceMappingURL=VSelectionControl.mjs.map"],"version":3}