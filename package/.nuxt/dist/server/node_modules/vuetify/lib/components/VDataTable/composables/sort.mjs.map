{"version":3,"file":"sort.mjs","sources":["../../../../../../../../../node_modules/vuetify/lib/components/VDataTable/composables/sort.mjs"],"sourcesContent":["// Composables\nimport { useLocale } from \"../../../composables/index.mjs\";\nimport { useProxiedModel } from \"../../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, inject, provide, toRef } from 'vue';\nimport { getObjectValueByPath, isEmpty, propsFactory } from \"../../../util/index.mjs\"; // Types\nexport const makeDataTableSortProps = propsFactory({\n  sortBy: {\n    type: Array,\n    default: () => []\n  },\n  customKeySort: Object,\n  multiSort: Boolean,\n  mustSort: Boolean\n}, 'DataTable-sort');\nconst VDataTableSortSymbol = Symbol.for('vuetify:data-table-sort');\nexport function createSort(props) {\n  const sortBy = useProxiedModel(props, 'sortBy');\n  const mustSort = toRef(props, 'mustSort');\n  const multiSort = toRef(props, 'multiSort');\n  return {\n    sortBy,\n    mustSort,\n    multiSort\n  };\n}\nexport function provideSort(options) {\n  const {\n    sortBy,\n    mustSort,\n    multiSort,\n    page\n  } = options;\n  const toggleSort = column => {\n    if (column.key == null) return;\n    let newSortBy = sortBy.value.map(x => ({\n      ...x\n    })) ?? [];\n    const item = newSortBy.find(x => x.key === column.key);\n    if (!item) {\n      if (multiSort.value) {\n        newSortBy.push({\n          key: column.key,\n          order: 'asc'\n        });\n      } else {\n        newSortBy = [{\n          key: column.key,\n          order: 'asc'\n        }];\n      }\n    } else if (item.order === 'desc') {\n      if (mustSort.value && newSortBy.length === 1) {\n        item.order = 'asc';\n      } else {\n        newSortBy = newSortBy.filter(x => x.key !== column.key);\n      }\n    } else {\n      item.order = 'desc';\n    }\n    sortBy.value = newSortBy;\n    if (page) page.value = 1;\n  };\n  function isSorted(column) {\n    return !!sortBy.value.find(item => item.key === column.key);\n  }\n  const data = {\n    sortBy,\n    toggleSort,\n    isSorted\n  };\n  provide(VDataTableSortSymbol, data);\n  return data;\n}\nexport function useSort() {\n  const data = inject(VDataTableSortSymbol);\n  if (!data) throw new Error('Missing sort!');\n  return data;\n}\n\n// TODO: abstract into project composable\nexport function useSortedItems(props, items, sortBy, options) {\n  const locale = useLocale();\n  const sortedItems = computed(() => {\n    if (!sortBy.value.length) return items.value;\n    return sortItems(items.value, sortBy.value, locale.current.value, {\n      transform: options?.transform,\n      sortFunctions: {\n        ...props.customKeySort,\n        ...options?.sortFunctions?.value\n      },\n      sortRawFunctions: options?.sortRawFunctions?.value\n    });\n  });\n  return {\n    sortedItems\n  };\n}\nexport function sortItems(items, sortByItems, locale, options) {\n  const stringCollator = new Intl.Collator(locale, {\n    sensitivity: 'accent',\n    usage: 'sort'\n  });\n  const transformedItems = items.map(item => [item, options?.transform ? options.transform(item) : item]);\n  return transformedItems.sort((a, b) => {\n    for (let i = 0; i < sortByItems.length; i++) {\n      let hasCustomResult = false;\n      const sortKey = sortByItems[i].key;\n      const sortOrder = sortByItems[i].order ?? 'asc';\n      if (sortOrder === false) continue;\n      let sortA = getObjectValueByPath(a[1], sortKey);\n      let sortB = getObjectValueByPath(b[1], sortKey);\n      let sortARaw = a[0].raw;\n      let sortBRaw = b[0].raw;\n      if (sortOrder === 'desc') {\n        [sortA, sortB] = [sortB, sortA];\n        [sortARaw, sortBRaw] = [sortBRaw, sortARaw];\n      }\n      if (options?.sortRawFunctions?.[sortKey]) {\n        const customResult = options.sortRawFunctions[sortKey](sortARaw, sortBRaw);\n        if (customResult == null) continue;\n        hasCustomResult = true;\n        if (customResult) return customResult;\n      }\n      if (options?.sortFunctions?.[sortKey]) {\n        const customResult = options.sortFunctions[sortKey](sortA, sortB);\n        if (customResult == null) continue;\n        hasCustomResult = true;\n        if (customResult) return customResult;\n      }\n      if (hasCustomResult) continue;\n\n      // Dates should be compared numerically\n      if (sortA instanceof Date && sortB instanceof Date) {\n        return sortA.getTime() - sortB.getTime();\n      }\n      [sortA, sortB] = [sortA, sortB].map(s => s != null ? s.toString().toLocaleLowerCase() : s);\n      if (sortA !== sortB) {\n        if (isEmpty(sortA) && isEmpty(sortB)) return 0;\n        if (isEmpty(sortA)) return -1;\n        if (isEmpty(sortB)) return 1;\n        if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);\n        return stringCollator.compare(sortA, sortB);\n      }\n    }\n    return 0;\n  }).map(_ref => {\n    let [item] = _ref;\n    return item;\n  });\n}\n//# sourceMappingURL=sort.mjs.map"],"names":[],"mappings":";;;;;AAKY,MAAC,yBAAyB,aAAa;AAAA,EACjD,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,SAAS,MAAM,CAAA;AAAA,EAChB;AAAA,EACD,eAAe;AAAA,EACf,WAAW;AAAA,EACX,UAAU;AACZ,GAAG,gBAAgB;AACnB,MAAM,uBAAuB,OAAO,IAAI,yBAAyB;AAC1D,SAAS,WAAW,OAAO;AAChC,QAAM,SAAS,gBAAgB,OAAO,QAAQ;AAC9C,QAAM,WAAW,MAAM,OAAO,UAAU;AACxC,QAAM,YAAY,MAAM,OAAO,WAAW;AAC1C,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACH;AACO,SAAS,YAAY,SAAS;AACnC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,IAAM;AACJ,QAAM,aAAa,YAAU;AAC3B,QAAI,OAAO,OAAO,KAAM;AACxB,QAAI,YAAY,OAAO,MAAM,IAAI,QAAM;AAAA,MACrC,GAAG;AAAA,IACJ,EAAC,KAAK,CAAE;AACT,UAAM,OAAO,UAAU,KAAK,OAAK,EAAE,QAAQ,OAAO,GAAG;AACrD,QAAI,CAAC,MAAM;AACT,UAAI,UAAU,OAAO;AACnB,kBAAU,KAAK;AAAA,UACb,KAAK,OAAO;AAAA,UACZ,OAAO;AAAA,QACjB,CAAS;AAAA,MACT,OAAa;AACL,oBAAY,CAAC;AAAA,UACX,KAAK,OAAO;AAAA,UACZ,OAAO;AAAA,QACjB,CAAS;AAAA,MACT;AAAA,IACA,WAAe,KAAK,UAAU,QAAQ;AAChC,UAAI,SAAS,SAAS,UAAU,WAAW,GAAG;AAC5C,aAAK,QAAQ;AAAA,MACrB,OAAa;AACL,oBAAY,UAAU,OAAO,OAAK,EAAE,QAAQ,OAAO,GAAG;AAAA,MAC9D;AAAA,IACA,OAAW;AACL,WAAK,QAAQ;AAAA,IACnB;AACI,WAAO,QAAQ;AACf,QAAI,KAAM,MAAK,QAAQ;AAAA,EACxB;AACD,WAAS,SAAS,QAAQ;AACxB,WAAO,CAAC,CAAC,OAAO,MAAM,KAAK,UAAQ,KAAK,QAAQ,OAAO,GAAG;AAAA,EAC9D;AACE,QAAM,OAAO;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD,UAAQ,sBAAsB,IAAI;AAClC,SAAO;AACT;AACO,SAAS,UAAU;AACxB,QAAM,OAAO,OAAO,oBAAoB;AACxC,MAAI,CAAC,KAAM,OAAM,IAAI,MAAM,eAAe;AAC1C,SAAO;AACT;AAGO,SAAS,eAAe,OAAO,OAAO,QAAQ,SAAS;AAC5D,QAAM,SAAS,UAAW;AAC1B,QAAM,cAAc,SAAS,MAAM;;AACjC,QAAI,CAAC,OAAO,MAAM,OAAQ,QAAO,MAAM;AACvC,WAAO,UAAU,MAAM,OAAO,OAAO,OAAO,OAAO,QAAQ,OAAO;AAAA,MAChE,WAAW,mCAAS;AAAA,MACpB,eAAe;AAAA,QACb,GAAG,MAAM;AAAA,QACT,IAAG,wCAAS,kBAAT,mBAAwB;AAAA,MAC5B;AAAA,MACD,mBAAkB,wCAAS,qBAAT,mBAA2B;AAAA,IACnD,CAAK;AAAA,EACL,CAAG;AACD,SAAO;AAAA,IACL;AAAA,EACD;AACH;AACO,SAAS,UAAU,OAAO,aAAa,QAAQ,SAAS;AAC7D,QAAM,iBAAiB,IAAI,KAAK,SAAS,QAAQ;AAAA,IAC/C,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAG;AACD,QAAM,mBAAmB,MAAM,IAAI,UAAQ,CAAC,OAAM,mCAAS,aAAY,QAAQ,UAAU,IAAI,IAAI,IAAI,CAAC;AACtG,SAAO,iBAAiB,KAAK,CAAC,GAAG,MAAM;;AACrC,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,kBAAkB;AACtB,YAAM,UAAU,YAAY,CAAC,EAAE;AAC/B,YAAM,YAAY,YAAY,CAAC,EAAE,SAAS;AAC1C,UAAI,cAAc,MAAO;AACzB,UAAI,QAAQ,qBAAqB,EAAE,CAAC,GAAG,OAAO;AAC9C,UAAI,QAAQ,qBAAqB,EAAE,CAAC,GAAG,OAAO;AAC9C,UAAI,WAAW,EAAE,CAAC,EAAE;AACpB,UAAI,WAAW,EAAE,CAAC,EAAE;AACpB,UAAI,cAAc,QAAQ;AACxB,SAAC,OAAO,KAAK,IAAI,CAAC,OAAO,KAAK;AAC9B,SAAC,UAAU,QAAQ,IAAI,CAAC,UAAU,QAAQ;AAAA,MAClD;AACM,WAAI,wCAAS,qBAAT,mBAA4B,UAAU;AACxC,cAAM,eAAe,QAAQ,iBAAiB,OAAO,EAAE,UAAU,QAAQ;AACzE,YAAI,gBAAgB,KAAM;AAC1B,0BAAkB;AAClB,YAAI,aAAc,QAAO;AAAA,MACjC;AACM,WAAI,wCAAS,kBAAT,mBAAyB,UAAU;AACrC,cAAM,eAAe,QAAQ,cAAc,OAAO,EAAE,OAAO,KAAK;AAChE,YAAI,gBAAgB,KAAM;AAC1B,0BAAkB;AAClB,YAAI,aAAc,QAAO;AAAA,MACjC;AACM,UAAI,gBAAiB;AAGrB,UAAI,iBAAiB,QAAQ,iBAAiB,MAAM;AAClD,eAAO,MAAM,YAAY,MAAM,QAAS;AAAA,MAChD;AACM,OAAC,OAAO,KAAK,IAAI,CAAC,OAAO,KAAK,EAAE,IAAI,OAAK,KAAK,OAAO,EAAE,SAAQ,EAAG,kBAAmB,IAAG,CAAC;AACzF,UAAI,UAAU,OAAO;AACnB,YAAI,QAAQ,KAAK,KAAK,QAAQ,KAAK,EAAG,QAAO;AAC7C,YAAI,QAAQ,KAAK,EAAG,QAAO;AAC3B,YAAI,QAAQ,KAAK,EAAG,QAAO;AAC3B,YAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,KAAK,EAAG,QAAO,OAAO,KAAK,IAAI,OAAO,KAAK;AACvE,eAAO,eAAe,QAAQ,OAAO,KAAK;AAAA,MAClD;AAAA,IACA;AACI,WAAO;AAAA,EACX,CAAG,EAAE,IAAI,UAAQ;AACb,QAAI,CAAC,IAAI,IAAI;AACb,WAAO;AAAA,EACX,CAAG;AACH;","x_google_ignoreList":[0]}