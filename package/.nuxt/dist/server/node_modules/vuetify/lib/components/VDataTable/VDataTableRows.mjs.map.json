{"file":"VDataTableRows.mjs","mappings":"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","names":["_createVNode","_Fragment","slotProps","_mergeProps","_a"],"sources":["../../../../../../../../node_modules/vuetify/lib/components/VDataTable/VDataTableRows.mjs"],"sourcesContent":["import { createVNode as _createVNode, Fragment as _Fragment, mergeProps as _mergeProps } from \"vue\";\n// Components\nimport { VDataTableGroupHeaderRow } from \"./VDataTableGroupHeaderRow.mjs\";\nimport { VDataTableRow } from \"./VDataTableRow.mjs\"; // Composables\nimport { useExpanded } from \"./composables/expand.mjs\";\nimport { useGroupBy } from \"./composables/group.mjs\";\nimport { useHeaders } from \"./composables/headers.mjs\";\nimport { useSelection } from \"./composables/select.mjs\";\nimport { makeDisplayProps, useDisplay } from \"../../composables/display.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\"; // Utilities\nimport { Fragment, mergeProps } from 'vue';\nimport { genericComponent, getPrefixedEventHandlers, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVDataTableRowsProps = propsFactory({\n  loading: [Boolean, String],\n  loadingText: {\n    type: String,\n    default: '$vuetify.dataIterator.loadingText'\n  },\n  hideNoData: Boolean,\n  items: {\n    type: Array,\n    default: () => []\n  },\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText'\n  },\n  rowProps: [Object, Function],\n  cellProps: [Object, Function],\n  ...makeDisplayProps()\n}, 'VDataTableRows');\nexport const VDataTableRows = genericComponent()({\n  name: 'VDataTableRows',\n  inheritAttrs: false,\n  props: makeVDataTableRowsProps(),\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      columns\n    } = useHeaders();\n    const {\n      expandOnClick,\n      toggleExpand,\n      isExpanded\n    } = useExpanded();\n    const {\n      isSelected,\n      toggleSelect\n    } = useSelection();\n    const {\n      toggleGroup,\n      isGroupOpen\n    } = useGroupBy();\n    const {\n      t\n    } = useLocale();\n    const {\n      mobile\n    } = useDisplay(props);\n    useRender(() => {\n      if (props.loading && (!props.items.length || slots.loading)) {\n        return _createVNode(\"tr\", {\n          \"class\": \"v-data-table-rows-loading\",\n          \"key\": \"loading\"\n        }, [_createVNode(\"td\", {\n          \"colspan\": columns.value.length\n        }, [slots.loading?.() ?? t(props.loadingText)])]);\n      }\n      if (!props.loading && !props.items.length && !props.hideNoData) {\n        return _createVNode(\"tr\", {\n          \"class\": \"v-data-table-rows-no-data\",\n          \"key\": \"no-data\"\n        }, [_createVNode(\"td\", {\n          \"colspan\": columns.value.length\n        }, [slots['no-data']?.() ?? t(props.noDataText)])]);\n      }\n      return _createVNode(_Fragment, null, [props.items.map((item, index) => {\n        if (item.type === 'group') {\n          const slotProps = {\n            index,\n            item,\n            columns: columns.value,\n            isExpanded,\n            toggleExpand,\n            isSelected,\n            toggleSelect,\n            toggleGroup,\n            isGroupOpen\n          };\n          return slots['group-header'] ? slots['group-header'](slotProps) : _createVNode(VDataTableGroupHeaderRow, _mergeProps({\n            \"key\": `group-header_${item.id}`,\n            \"item\": item\n          }, getPrefixedEventHandlers(attrs, ':group-header', () => slotProps)), slots);\n        }\n        const slotProps = {\n          index,\n          item: item.raw,\n          internalItem: item,\n          columns: columns.value,\n          isExpanded,\n          toggleExpand,\n          isSelected,\n          toggleSelect\n        };\n        const itemSlotProps = {\n          ...slotProps,\n          props: mergeProps({\n            key: `item_${item.key ?? item.index}`,\n            onClick: expandOnClick.value ? () => {\n              toggleExpand(item);\n            } : undefined,\n            index,\n            item,\n            cellProps: props.cellProps,\n            mobile: mobile.value\n          }, getPrefixedEventHandlers(attrs, ':row', () => slotProps), typeof props.rowProps === 'function' ? props.rowProps({\n            item: slotProps.item,\n            index: slotProps.index,\n            internalItem: slotProps.internalItem\n          }) : props.rowProps)\n        };\n        return _createVNode(_Fragment, {\n          \"key\": itemSlotProps.props.key\n        }, [slots.item ? slots.item(itemSlotProps) : _createVNode(VDataTableRow, itemSlotProps.props, slots), isExpanded(item) && slots['expanded-row']?.(slotProps)]);\n      })]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VDataTableRows.mjs.map"],"version":3}