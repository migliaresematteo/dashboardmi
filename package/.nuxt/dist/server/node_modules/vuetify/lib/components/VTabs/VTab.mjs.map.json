{"file":"VTab.mjs","mappings":"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","names":["_createVNode","_mergeProps","_Fragment"],"sources":["../../../../../../../../node_modules/vuetify/lib/components/VTabs/VTab.mjs"],"sourcesContent":["import { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VTab.css\";\n\n// Components\nimport { makeVBtnProps, VBtn } from \"../VBtn/VBtn.mjs\"; // Composables\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\"; // Utilities\nimport { computed, ref } from 'vue';\nimport { VTabsSymbol } from \"./shared.mjs\";\nimport { animate, genericComponent, omit, propsFactory, standardEasing, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVTabProps = propsFactory({\n  fixed: Boolean,\n  sliderColor: String,\n  hideSlider: Boolean,\n  direction: {\n    type: String,\n    default: 'horizontal'\n  },\n  ...omit(makeVBtnProps({\n    selectedClass: 'v-tab--selected',\n    variant: 'text'\n  }), ['active', 'block', 'flat', 'location', 'position', 'symbol'])\n}, 'VTab');\nexport const VTab = genericComponent()({\n  name: 'VTab',\n  props: makeVTabProps(),\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs\n    } = _ref;\n    const {\n      textColorClasses: sliderColorClasses,\n      textColorStyles: sliderColorStyles\n    } = useTextColor(props, 'sliderColor');\n    const rootEl = ref();\n    const sliderEl = ref();\n    const isHorizontal = computed(() => props.direction === 'horizontal');\n    const isSelected = computed(() => rootEl.value?.group?.isSelected.value ?? false);\n    function updateSlider(_ref2) {\n      let {\n        value\n      } = _ref2;\n      if (value) {\n        const prevEl = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider');\n        const nextEl = sliderEl.value;\n        if (!prevEl || !nextEl) return;\n        const color = getComputedStyle(prevEl).color;\n        const prevBox = prevEl.getBoundingClientRect();\n        const nextBox = nextEl.getBoundingClientRect();\n        const xy = isHorizontal.value ? 'x' : 'y';\n        const XY = isHorizontal.value ? 'X' : 'Y';\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom';\n        const widthHeight = isHorizontal.value ? 'width' : 'height';\n        const prevPos = prevBox[xy];\n        const nextPos = nextBox[xy];\n        const delta = prevPos > nextPos ? prevBox[rightBottom] - nextBox[rightBottom] : prevBox[xy] - nextBox[xy];\n        const origin = Math.sign(delta) > 0 ? isHorizontal.value ? 'right' : 'bottom' : Math.sign(delta) < 0 ? isHorizontal.value ? 'left' : 'top' : 'center';\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight]);\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight]) || 0;\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight] || 0;\n        const sigma = 1.5;\n        animate(nextEl, {\n          backgroundColor: [color, 'currentcolor'],\n          transform: [`translate${XY}(${delta}px) scale${XY}(${initialScale})`, `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`, 'none'],\n          transformOrigin: Array(3).fill(origin)\n        }, {\n          duration: 225,\n          easing: standardEasing\n        });\n      }\n    }\n    useRender(() => {\n      const btnProps = VBtn.filterProps(props);\n      return _createVNode(VBtn, _mergeProps({\n        \"symbol\": VTabsSymbol,\n        \"ref\": rootEl,\n        \"class\": ['v-tab', props.class],\n        \"style\": props.style,\n        \"tabindex\": isSelected.value ? 0 : -1,\n        \"role\": \"tab\",\n        \"aria-selected\": String(isSelected.value),\n        \"active\": false\n      }, btnProps, attrs, {\n        \"block\": props.fixed,\n        \"maxWidth\": props.fixed ? 300 : undefined,\n        \"onGroup:selected\": updateSlider\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [slots.default?.() ?? props.text, !props.hideSlider && _createVNode(\"div\", {\n          \"ref\": sliderEl,\n          \"class\": ['v-tab__slider', sliderColorClasses.value],\n          \"style\": sliderColorStyles.value\n        }, null)])\n      });\n    });\n    return forwardRefs({}, rootEl);\n  }\n});\n//# sourceMappingURL=VTab.mjs.map"],"version":3}