{"file":"headers.mjs","mappings":";;;AAGY,MAAC,2BAA2B,aAAa;AAAA,EACnD,SAAS;AACX,GAAG,kBAAkB;AACT,MAAC,0BAA0B,OAAO,IAAI,4BAA4B;AAC9E,MAAM,gBAAgB;AAAA,EACpB,OAAO;AAAA,EACP,UAAU;AACZ;AACA,MAAM,sBAAsB;AAAA,EAC1B,GAAG;AAAA,EACH,OAAO;AACT;AACA,SAAS,gBAAgB;AACvB,MAAI,MAAM,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AAChF,QAAM,QAAQ,IAAI,IAAI,cAAY;AAAA,IAChC;AAAA,IACA,UAAU;AAAA,EACd,EAAI;AACF,SAAO;AAAA,IACL,SAAS,CAAC,SAAS,aAAa;AAC9B,UAAI,QAAQ;AACZ,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAM,OAAO,MAAM,CAAC;AACpB,YAAI,KAAK,WAAW,UAAU;AAC5B,gBAAM,OAAO,GAAG,GAAG;AAAA,YACjB;AAAA,YACA;AAAA,UACZ,CAAW;AACD,kBAAQ;AACR;AAAA,QACV;AAAA,MACA;AACM,UAAI,CAAC,MAAO,OAAM,KAAK;AAAA,QACrB;AAAA,QACA;AAAA,MACR,CAAO;AAAA,IACF;AAAA,IACD,MAAM,MAAM,MAAM;AAAA,IAClB,OAAO,MAAM;AACX,UAAI,QAAQ;AACZ,UAAI,CAAC,MAAM,OAAQ,QAAO;AAC1B,YAAM,QAAQ,KAAK,MAAM,MAAM,CAAC,EAAE,QAAQ;AAC1C,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAI,KAAK,MAAM,MAAM,CAAC,EAAE,QAAQ,MAAM,MAAO,UAAS;AAAA,MAC9D;AACM,aAAO;AAAA,IACR;AAAA,IACD,SAAS,MAAM;AACb,aAAO,MAAM,MAAO;AAAA,IAC1B;AAAA,EACG;AACH;AACA,SAAS,cAAc,MAAM;AAC3B,MAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AACpF,MAAI,CAAC,KAAK,UAAU;AAClB,YAAQ,KAAK,IAAI;AAAA,EACrB,OAAS;AACL,eAAW,SAAS,KAAK,UAAU;AACjC,oBAAc,OAAO,OAAO;AAAA,IAClC;AAAA,EACA;AACE,SAAO;AACT;AACA,SAAS,YAAY,SAAS;AAC5B,MAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,oBAAI,IAAK;AACxF,aAAW,QAAQ,SAAS;AAC1B,QAAI,KAAK,IAAK,MAAK,IAAI,KAAK,GAAG;AAC/B,QAAI,KAAK,UAAU;AACjB,kBAAY,KAAK,UAAU,IAAI;AAAA,IACrC;AAAA,EACA;AACE,SAAO;AACT;AACA,SAAS,eAAe,MAAM;AAC5B,MAAI,CAAC,KAAK,IAAK,QAAO;AACtB,MAAI,KAAK,QAAQ,mBAAoB,QAAO;AAC5C,MAAI,CAAC,qBAAqB,mBAAmB,EAAE,SAAS,KAAK,GAAG,EAAG,QAAO;AAC1E,SAAO;AACT;AACA,SAAS,SAAS,MAAM;AACtB,MAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAChF,MAAI,CAAC,KAAK,SAAU,QAAO;AAC3B,SAAO,KAAK,IAAI,OAAO,GAAG,KAAK,SAAS,IAAI,WAAS,SAAS,OAAO,QAAQ,CAAC,CAAC,CAAC;AAClF;AACA,SAAS,kBAAkB,OAAO;AAChC,MAAI,YAAY;AAChB,WAAS,SAAS,MAAM;AACtB,QAAI,cAAc,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AACtF,QAAI,CAAC,KAAM;AACX,QAAI,aAAa;AACf,WAAK,QAAQ;AAAA,IACnB;AACI,QAAI,KAAK,OAAO;AACd,UAAI,KAAK,UAAU;AACjB,iBAAS,IAAI,KAAK,SAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAClD,mBAAS,KAAK,SAAS,CAAC,GAAG,IAAI;AAAA,QACzC;AAAA,MACA,OAAa;AACL,YAAI,CAAC,WAAW;AACd,eAAK,YAAY;AAAA,QAClB,WAAU,MAAM,OAAO,KAAK,KAAK,CAAC,GAAG;AACpC,uBAAa,2DAA2D,KAAK,GAAG,GAAG;AAAA,QAC7F,OAAe;AACL,eAAK,WAAW,KAAK,IAAI,OAAO,KAAK,KAAK,KAAK,GAAG,OAAO,KAAK,QAAQ,KAAK,CAAC;AAAA,QACtF;AACQ,oBAAY;AAAA,MACpB;AAAA,IACA,OAAW;AACL,UAAI,KAAK,UAAU;AACjB,iBAAS,IAAI,KAAK,SAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAClD,mBAAS,KAAK,SAAS,CAAC,CAAC;AAAA,QACnC;AAAA,MACA,OAAa;AACL,oBAAY;AAAA,MACpB;AAAA,IACA;AAAA,EACA;AACE,WAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,aAAS,MAAM,CAAC,CAAC;AAAA,EACrB;AACE,WAAS,eAAe,MAAM;AAC5B,QAAIA,eAAc,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AACtF,QAAI,CAAC,KAAM,QAAOA;AAClB,QAAI,KAAK,UAAU;AACjB,WAAK,cAAcA;AACnB,iBAAW,SAAS,KAAK,UAAU;AACjC,QAAAA,eAAc,eAAe,OAAOA,YAAW;AAAA,MACvD;AAAA,IACA,WAAe,KAAK,OAAO;AACrB,WAAK,cAAcA;AACnB,MAAAA,gBAAe,WAAW,KAAK,SAAS,GAAG,KAAK;AAAA,IACtD;AACI,WAAOA;AAAA,EACX;AACE,MAAI,cAAc;AAClB,aAAW,QAAQ,OAAO;AACxB,kBAAc,eAAe,MAAM,WAAW;AAAA,EAClD;AACA;AACA,SAAS,MAAM,OAAO,UAAU;AAC9B,QAAM,UAAU,CAAE;AAClB,MAAI,eAAe;AACnB,QAAM,QAAQ,cAAc,KAAK;AACjC,SAAO,MAAM,KAAM,IAAG,GAAG;AACvB,QAAI,UAAU,MAAM,MAAO;AAC3B,UAAM,MAAM,CAAE;AACd,QAAI,WAAW;AACf,WAAO,UAAU,GAAG;AAClB,YAAM;AAAA,QACJ,SAAS;AAAA,QACT;AAAA,MACR,IAAU,MAAM,QAAS;AACnB,YAAM,OAAO,WAAW,eAAe,SAAS,IAAI;AACpD,UAAI,KAAK;AAAA,QACP,GAAG;AAAA,QACH,SAAS,QAAQ;AAAA,QACjB,SAAS,KAAK,WAAW,cAAc,IAAI,EAAE,SAAS;AAAA,MAC9D,CAAO;AACD,UAAI,KAAK,UAAU;AACjB,mBAAW,SAAS,KAAK,UAAU;AAEjC,gBAAM,OAAO,WAAW,IAAI,WAAW,KAAK,IAAI,IAAI,eAAe,CAAC;AACpE,gBAAM,QAAQ,OAAO,eAAe,OAAO,IAAI;AAAA,QACzD;AAAA,MACA;AACM,kBAAY;AACZ,iBAAW;AAAA,IACjB;AACI,oBAAgB;AAChB,YAAQ,KAAK,GAAG;AAAA,EACpB;AACE,QAAM,UAAU,MAAM,IAAI,UAAQ,cAAc,IAAI,CAAC,EAAE,KAAM;AAC7D,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACD;AACH;AACA,SAAS,yBAAyB,OAAO;AACvC,QAAM,kBAAkB,CAAE;AAC1B,aAAW,QAAQ,OAAO;AACxB,UAAM,cAAc;AAAA,MAClB,GAAG,eAAe,IAAI;AAAA,MACtB,GAAG;AAAA,IACJ;AACD,UAAM,MAAM,YAAY,QAAQ,OAAO,YAAY,UAAU,WAAW,YAAY,QAAQ;AAC5F,UAAM,QAAQ,YAAY,SAAS,OAAO;AAC1C,UAAM,eAAe;AAAA,MACnB,GAAG;AAAA,MACH;AAAA,MACA;AAAA,MACA,UAAU,YAAY,aAAa,YAAY,OAAO,QAAQ,CAAC,CAAC,YAAY;AAAA,MAC5E,UAAU,YAAY,WAAW,yBAAyB,YAAY,QAAQ,IAAI;AAAA,IACnF;AACD,oBAAgB,KAAK,YAAY;AAAA,EACrC;AACE,SAAO;AACT;AACO,SAAS,cAAc,OAAO,SAAS;AAC5C,QAAM,UAAU,IAAI,EAAE;AACtB,QAAM,UAAU,IAAI,EAAE;AACtB,QAAM,gBAAgB,IAAI,EAAE;AAC5B,QAAM,mBAAmB,IAAI,EAAE;AAC/B,QAAM,kBAAkB,IAAI,EAAE;AAC9B,cAAY,MAAM;;AAChB,UAAM,WAAW,MAAM,WAAW,OAAO,KAAK,MAAM,MAAM,CAAC,KAAK,CAAA,CAAE,EAAE,IAAI,UAAQ;AAAA,MAC9E;AAAA,MACA,OAAO,WAAW,GAAG;AAAA,IAC3B,EAAM;AACF,UAAM,QAAQ,SAAS,MAAO;AAC9B,UAAM,OAAO,YAAY,KAAK;AAC9B,UAAI,wCAAS,YAAT,mBAAkB,MAAM,WAAU,CAAC,KAAK,IAAI,kBAAkB,GAAG;AACnE,YAAM,QAAQ;AAAA,QACZ,KAAK;AAAA,QACL,OAAO;AAAA,MACf,CAAO;AAAA,IACP;AACI,UAAI,wCAAS,eAAT,mBAAqB,UAAS,CAAC,KAAK,IAAI,mBAAmB,GAAG;AAChE,YAAM,QAAQ;AAAA,QACZ,KAAK;AAAA,MACb,CAAO;AAAA,IACP;AACI,UAAI,wCAAS,eAAT,mBAAqB,UAAS,CAAC,KAAK,IAAI,mBAAmB,GAAG;AAChE,YAAM,KAAK;AAAA,QACT,KAAK;AAAA,MACb,CAAO;AAAA,IACP;AACI,UAAM,kBAAkB,yBAAyB,KAAK;AACtD,sBAAkB,eAAe;AACjC,UAAM,WAAW,KAAK,IAAI,GAAG,gBAAgB,IAAI,UAAQ,SAAS,IAAI,CAAC,CAAC,IAAI;AAC5E,UAAM,SAAS,MAAM,iBAAiB,QAAQ;AAC9C,YAAQ,QAAQ,OAAO;AACvB,YAAQ,QAAQ,OAAO;AACvB,UAAM,cAAc,OAAO,QAAQ,KAAK,CAAC;AACzC,eAAW,UAAU,aAAa;AAChC,UAAI,CAAC,OAAO,IAAK;AACjB,UAAI,OAAO,UAAU;AACnB,YAAI,OAAO,MAAM;AACf,wBAAc,MAAM,OAAO,GAAG,IAAI,OAAO;AAAA,QACnD;AACQ,YAAI,OAAO,SAAS;AAClB,2BAAiB,MAAM,OAAO,GAAG,IAAI,OAAO;AAAA,QACtD;AAAA,MACA;AACM,UAAI,OAAO,QAAQ;AACjB,wBAAgB,MAAM,OAAO,GAAG,IAAI,OAAO;AAAA,MACnD;AAAA,IACA;AAAA,EACA,CAAG;AACD,QAAM,OAAO;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD,UAAQ,yBAAyB,IAAI;AACrC,SAAO;AACT;AACO,SAAS,aAAa;AAC3B,QAAM,OAAO,OAAO,uBAAuB;AAC3C,MAAI,CAAC,KAAM,OAAM,IAAI,MAAM,kBAAkB;AAC7C,SAAO;AACT;","names":["fixedOffset"],"sources":["../../../../../../../../../node_modules/vuetify/lib/components/VDataTable/composables/headers.mjs"],"sourcesContent":["// Utilities\nimport { capitalize, inject, provide, ref, watchEffect } from 'vue';\nimport { consoleError, propsFactory } from \"../../../util/index.mjs\"; // Types\nexport const makeDataTableHeaderProps = propsFactory({\n  headers: Array\n}, 'DataTable-header');\nexport const VDataTableHeadersSymbol = Symbol.for('vuetify:data-table-headers');\nconst defaultHeader = {\n  title: '',\n  sortable: false\n};\nconst defaultActionHeader = {\n  ...defaultHeader,\n  width: 48\n};\nfunction priorityQueue() {\n  let arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const queue = arr.map(element => ({\n    element,\n    priority: 0\n  }));\n  return {\n    enqueue: (element, priority) => {\n      let added = false;\n      for (let i = 0; i < queue.length; i++) {\n        const item = queue[i];\n        if (item.priority > priority) {\n          queue.splice(i, 0, {\n            element,\n            priority\n          });\n          added = true;\n          break;\n        }\n      }\n      if (!added) queue.push({\n        element,\n        priority\n      });\n    },\n    size: () => queue.length,\n    count: () => {\n      let count = 0;\n      if (!queue.length) return 0;\n      const whole = Math.floor(queue[0].priority);\n      for (let i = 0; i < queue.length; i++) {\n        if (Math.floor(queue[i].priority) === whole) count += 1;\n      }\n      return count;\n    },\n    dequeue: () => {\n      return queue.shift();\n    }\n  };\n}\nfunction extractLeaves(item) {\n  let columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (!item.children) {\n    columns.push(item);\n  } else {\n    for (const child of item.children) {\n      extractLeaves(child, columns);\n    }\n  }\n  return columns;\n}\nfunction extractKeys(headers) {\n  let keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n  for (const item of headers) {\n    if (item.key) keys.add(item.key);\n    if (item.children) {\n      extractKeys(item.children, keys);\n    }\n  }\n  return keys;\n}\nfunction getDefaultItem(item) {\n  if (!item.key) return undefined;\n  if (item.key === 'data-table-group') return defaultHeader;\n  if (['data-table-expand', 'data-table-select'].includes(item.key)) return defaultActionHeader;\n  return undefined;\n}\nfunction getDepth(item) {\n  let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (!item.children) return depth;\n  return Math.max(depth, ...item.children.map(child => getDepth(child, depth + 1)));\n}\nfunction parseFixedColumns(items) {\n  let seenFixed = false;\n  function setFixed(item) {\n    let parentFixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!item) return;\n    if (parentFixed) {\n      item.fixed = true;\n    }\n    if (item.fixed) {\n      if (item.children) {\n        for (let i = item.children.length - 1; i >= 0; i--) {\n          setFixed(item.children[i], true);\n        }\n      } else {\n        if (!seenFixed) {\n          item.lastFixed = true;\n        } else if (isNaN(Number(item.width))) {\n          consoleError(`Multiple fixed columns should have a static width (key: ${item.key})`);\n        } else {\n          item.minWidth = Math.max(Number(item.width) || 0, Number(item.minWidth) || 0);\n        }\n        seenFixed = true;\n      }\n    } else {\n      if (item.children) {\n        for (let i = item.children.length - 1; i >= 0; i--) {\n          setFixed(item.children[i]);\n        }\n      } else {\n        seenFixed = false;\n      }\n    }\n  }\n  for (let i = items.length - 1; i >= 0; i--) {\n    setFixed(items[i]);\n  }\n  function setFixedOffset(item) {\n    let fixedOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (!item) return fixedOffset;\n    if (item.children) {\n      item.fixedOffset = fixedOffset;\n      for (const child of item.children) {\n        fixedOffset = setFixedOffset(child, fixedOffset);\n      }\n    } else if (item.fixed) {\n      item.fixedOffset = fixedOffset;\n      fixedOffset += parseFloat(item.width || '0') || 0;\n    }\n    return fixedOffset;\n  }\n  let fixedOffset = 0;\n  for (const item of items) {\n    fixedOffset = setFixedOffset(item, fixedOffset);\n  }\n}\nfunction parse(items, maxDepth) {\n  const headers = [];\n  let currentDepth = 0;\n  const queue = priorityQueue(items);\n  while (queue.size() > 0) {\n    let rowSize = queue.count();\n    const row = [];\n    let fraction = 1;\n    while (rowSize > 0) {\n      const {\n        element: item,\n        priority\n      } = queue.dequeue();\n      const diff = maxDepth - currentDepth - getDepth(item);\n      row.push({\n        ...item,\n        rowspan: diff ?? 1,\n        colspan: item.children ? extractLeaves(item).length : 1\n      });\n      if (item.children) {\n        for (const child of item.children) {\n          // This internally sorts items that are on the same priority \"row\"\n          const sort = priority % 1 + fraction / Math.pow(10, currentDepth + 2);\n          queue.enqueue(child, currentDepth + diff + sort);\n        }\n      }\n      fraction += 1;\n      rowSize -= 1;\n    }\n    currentDepth += 1;\n    headers.push(row);\n  }\n  const columns = items.map(item => extractLeaves(item)).flat();\n  return {\n    columns,\n    headers\n  };\n}\nfunction convertToInternalHeaders(items) {\n  const internalHeaders = [];\n  for (const item of items) {\n    const defaultItem = {\n      ...getDefaultItem(item),\n      ...item\n    };\n    const key = defaultItem.key ?? (typeof defaultItem.value === 'string' ? defaultItem.value : null);\n    const value = defaultItem.value ?? key ?? null;\n    const internalItem = {\n      ...defaultItem,\n      key,\n      value,\n      sortable: defaultItem.sortable ?? (defaultItem.key != null || !!defaultItem.sort),\n      children: defaultItem.children ? convertToInternalHeaders(defaultItem.children) : undefined\n    };\n    internalHeaders.push(internalItem);\n  }\n  return internalHeaders;\n}\nexport function createHeaders(props, options) {\n  const headers = ref([]);\n  const columns = ref([]);\n  const sortFunctions = ref({});\n  const sortRawFunctions = ref({});\n  const filterFunctions = ref({});\n  watchEffect(() => {\n    const _headers = props.headers || Object.keys(props.items[0] ?? {}).map(key => ({\n      key,\n      title: capitalize(key)\n    }));\n    const items = _headers.slice();\n    const keys = extractKeys(items);\n    if (options?.groupBy?.value.length && !keys.has('data-table-group')) {\n      items.unshift({\n        key: 'data-table-group',\n        title: 'Group'\n      });\n    }\n    if (options?.showSelect?.value && !keys.has('data-table-select')) {\n      items.unshift({\n        key: 'data-table-select'\n      });\n    }\n    if (options?.showExpand?.value && !keys.has('data-table-expand')) {\n      items.push({\n        key: 'data-table-expand'\n      });\n    }\n    const internalHeaders = convertToInternalHeaders(items);\n    parseFixedColumns(internalHeaders);\n    const maxDepth = Math.max(...internalHeaders.map(item => getDepth(item))) + 1;\n    const parsed = parse(internalHeaders, maxDepth);\n    headers.value = parsed.headers;\n    columns.value = parsed.columns;\n    const flatHeaders = parsed.headers.flat(1);\n    for (const header of flatHeaders) {\n      if (!header.key) continue;\n      if (header.sortable) {\n        if (header.sort) {\n          sortFunctions.value[header.key] = header.sort;\n        }\n        if (header.sortRaw) {\n          sortRawFunctions.value[header.key] = header.sortRaw;\n        }\n      }\n      if (header.filter) {\n        filterFunctions.value[header.key] = header.filter;\n      }\n    }\n  });\n  const data = {\n    headers,\n    columns,\n    sortFunctions,\n    sortRawFunctions,\n    filterFunctions\n  };\n  provide(VDataTableHeadersSymbol, data);\n  return data;\n}\nexport function useHeaders() {\n  const data = inject(VDataTableHeadersSymbol);\n  if (!data) throw new Error('Missing headers!');\n  return data;\n}\n//# sourceMappingURL=headers.mjs.map"],"version":3}