{"file":"VTextarea.mjs","mappings":"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","names":["_createVNode","_mergeProps","_Fragment","_withDirectives","_resolveDirective","_vModelText"],"sources":["../../../../../../../../node_modules/vuetify/lib/components/VTextarea/VTextarea.mjs"],"sourcesContent":["import { Fragment as _Fragment, createVNode as _createVNode, resolveDirective as _resolveDirective, mergeProps as _mergeProps, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\n// Styles\nimport \"./VTextarea.css\";\nimport \"../VTextField/VTextField.css\";\n\n// Components\nimport { VCounter } from \"../VCounter/VCounter.mjs\";\nimport { VField } from \"../VField/index.mjs\";\nimport { makeVFieldProps } from \"../VField/VField.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\"; // Composables\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Directives\nimport Intersect from \"../../directives/intersect/index.mjs\"; // Utilities\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, shallowRef, watch, watchEffect } from 'vue';\nimport { callEvent, clamp, convertToUnit, filterInputAttrs, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVTextareaProps = propsFactory({\n  autoGrow: Boolean,\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: Function,\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  noResize: Boolean,\n  rows: {\n    type: [Number, String],\n    default: 5,\n    validator: v => !isNaN(parseFloat(v))\n  },\n  maxRows: {\n    type: [Number, String],\n    validator: v => !isNaN(parseFloat(v))\n  },\n  suffix: String,\n  modelModifiers: Object,\n  ...makeVInputProps(),\n  ...makeVFieldProps()\n}, 'VTextarea');\nexport const VTextarea = genericComponent()({\n  name: 'VTextarea',\n  directives: {\n    Intersect\n  },\n  inheritAttrs: false,\n  props: makeVTextareaProps(),\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : (model.value || '').toString().length;\n    });\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength;\n      if (!props.counter || typeof props.counter !== 'number' && typeof props.counter !== 'string') return undefined;\n      return props.counter;\n    });\n    function onIntersect(isIntersecting, entries) {\n      if (!props.autofocus || !isIntersecting) return;\n      entries[0].target?.focus?.();\n    }\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const controlHeight = shallowRef('');\n    const textareaRef = ref();\n    const isActive = computed(() => props.persistentPlaceholder || isFocused.value || props.active);\n    function onFocus() {\n      if (textareaRef.value !== document.activeElement) {\n        textareaRef.value?.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onControlClick(e) {\n      onFocus();\n      emit('click:control', e);\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = '';\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    function onInput(e) {\n      const el = e.target;\n      model.value = el.value;\n      if (props.modelModifiers?.trim) {\n        const caretPosition = [el.selectionStart, el.selectionEnd];\n        nextTick(() => {\n          el.selectionStart = caretPosition[0];\n          el.selectionEnd = caretPosition[1];\n        });\n      }\n    }\n    const sizerRef = ref();\n    const rows = ref(Number(props.rows));\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\n    watchEffect(() => {\n      if (!props.autoGrow) rows.value = Number(props.rows);\n    });\n    function calculateInputHeight() {\n      if (!props.autoGrow) return;\n      nextTick(() => {\n        if (!sizerRef.value || !vFieldRef.value) return;\n        const style = getComputedStyle(sizerRef.value);\n        const fieldStyle = getComputedStyle(vFieldRef.value.$el);\n        const padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) + parseFloat(style.getPropertyValue('--v-input-padding-top')) + parseFloat(style.getPropertyValue('--v-field-padding-bottom'));\n        const height = sizerRef.value.scrollHeight;\n        const lineHeight = parseFloat(style.lineHeight);\n        const minHeight = Math.max(parseFloat(props.rows) * lineHeight + padding, parseFloat(fieldStyle.getPropertyValue('--v-input-control-height')));\n        const maxHeight = parseFloat(props.maxRows) * lineHeight + padding || Infinity;\n        const newHeight = clamp(height ?? 0, minHeight, maxHeight);\n        rows.value = Math.floor((newHeight - padding) / lineHeight);\n        controlHeight.value = convertToUnit(newHeight);\n      });\n    }\n    onMounted(calculateInputHeight);\n    watch(model, calculateInputHeight);\n    watch(() => props.rows, calculateInputHeight);\n    watch(() => props.maxRows, calculateInputHeight);\n    watch(() => props.density, calculateInputHeight);\n    let observer;\n    watch(sizerRef, val => {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight);\n        observer.observe(sizerRef.value);\n      } else {\n        observer?.disconnect();\n      }\n    });\n    onBeforeUnmount(() => {\n      observer?.disconnect();\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || props.counterValue);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const {\n        modelValue: _,\n        ...inputProps\n      } = VInput.filterProps(props);\n      const fieldProps = VField.filterProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-textarea v-text-field', {\n          'v-textarea--prefixed': props.prefix,\n          'v-textarea--suffixed': props.suffix,\n          'v-text-field--prefixed': props.prefix,\n          'v-text-field--suffixed': props.suffix,\n          'v-textarea--auto-grow': props.autoGrow,\n          'v-textarea--no-resize': props.noResize || props.autoGrow,\n          'v-input--plain-underlined': isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": rows.value === 1 && !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref2;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"style\": {\n              '--v-textarea-control-height': controlHeight.value\n            },\n            \"onClick\": onControlClick,\n            \"onMousedown\": onControlMousedown,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"centerAffix\": rows.value === 1 && !isPlainOrUnderlined.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: _ref3 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref3;\n              return _createVNode(_Fragment, null, [props.prefix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix\"\n              }, [props.prefix]), _withDirectives(_createVNode(\"textarea\", _mergeProps({\n                \"ref\": textareaRef,\n                \"class\": fieldClass,\n                \"value\": model.value,\n                \"onInput\": onInput,\n                \"autofocus\": props.autofocus,\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"placeholder\": props.placeholder,\n                \"rows\": props.rows,\n                \"name\": props.name,\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), [[_resolveDirective(\"intersect\"), {\n                handler: onIntersect\n              }, null, {\n                once: true\n              }]]), props.autoGrow && _withDirectives(_createVNode(\"textarea\", {\n                \"class\": [fieldClass, 'v-textarea__sizer'],\n                \"id\": `${slotProps.id}-sizer`,\n                \"onUpdate:modelValue\": $event => model.value = $event,\n                \"ref\": sizerRef,\n                \"readonly\": true,\n                \"aria-hidden\": \"true\"\n              }, null), [[_vModelText, model.value]]), props.suffix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix\"\n              }, [props.suffix])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": props.persistentCounter || isFocused.value,\n          \"value\": counterValue.value,\n          \"max\": max.value,\n          \"disabled\": props.disabled\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, textareaRef);\n  }\n});\n//# sourceMappingURL=VTextarea.mjs.map"],"version":3}