{"file":"VExpansionPanel.mjs","mappings":"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","names":["_createVNode"],"sources":["../../../../../../../../node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanel.mjs"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpansionPanelSymbol } from \"./shared.mjs\";\nimport { makeVExpansionPanelTextProps, VExpansionPanelText } from \"./VExpansionPanelText.mjs\";\nimport { makeVExpansionPanelTitleProps, VExpansionPanelTitle } from \"./VExpansionPanelTitle.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\"; // Composables\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { computed, provide } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVExpansionPanelProps = propsFactory({\n  title: String,\n  text: String,\n  bgColor: String,\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeVExpansionPanelTitleProps(),\n  ...makeVExpansionPanelTextProps()\n}, 'VExpansionPanel');\nexport const VExpansionPanel = genericComponent()({\n  name: 'VExpansionPanel',\n  props: makeVExpansionPanelProps(),\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const groupItem = useGroupItem(props, VExpansionPanelSymbol);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(props, 'bgColor');\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const isDisabled = computed(() => groupItem?.disabled.value || props.disabled);\n    const selectedIndices = computed(() => groupItem.group.items.value.reduce((arr, item, index) => {\n      if (groupItem.group.selected.value.includes(item.id)) arr.push(index);\n      return arr;\n    }, []));\n    const isBeforeSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id);\n      return !groupItem.isSelected.value && selectedIndices.value.some(selectedIndex => selectedIndex - index === 1);\n    });\n    const isAfterSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id);\n      return !groupItem.isSelected.value && selectedIndices.value.some(selectedIndex => selectedIndex - index === -1);\n    });\n    provide(VExpansionPanelSymbol, groupItem);\n    useRender(() => {\n      const hasText = !!(slots.text || props.text);\n      const hasTitle = !!(slots.title || props.title);\n      const expansionPanelTitleProps = VExpansionPanelTitle.filterProps(props);\n      const expansionPanelTextProps = VExpansionPanelText.filterProps(props);\n      return _createVNode(props.tag, {\n        \"class\": ['v-expansion-panel', {\n          'v-expansion-panel--active': groupItem.isSelected.value,\n          'v-expansion-panel--before-active': isBeforeSelected.value,\n          'v-expansion-panel--after-active': isAfterSelected.value,\n          'v-expansion-panel--disabled': isDisabled.value\n        }, roundedClasses.value, backgroundColorClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, props.style]\n      }, {\n        default: () => [_createVNode(\"div\", {\n          \"class\": ['v-expansion-panel__shadow', ...elevationClasses.value]\n        }, null), _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VExpansionPanelTitle: {\n              ...expansionPanelTitleProps\n            },\n            VExpansionPanelText: {\n              ...expansionPanelTextProps\n            }\n          }\n        }, {\n          default: () => [hasTitle && _createVNode(VExpansionPanelTitle, {\n            \"key\": \"title\"\n          }, {\n            default: () => [slots.title ? slots.title() : props.title]\n          }), hasText && _createVNode(VExpansionPanelText, {\n            \"key\": \"text\"\n          }, {\n            default: () => [slots.text ? slots.text() : props.text]\n          }), slots.default?.()]\n        })]\n      });\n    });\n    return {\n      groupItem\n    };\n  }\n});\n//# sourceMappingURL=VExpansionPanel.mjs.map"],"version":3}