{"file":"slider.mjs","mappings":"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","names":["vertical","position"],"sources":["../../../../../../../../node_modules/vuetify/lib/components/VSlider/slider.mjs"],"sourcesContent":["/* eslint-disable max-statements */\n// Composables\nimport { makeElevationProps } from \"../../composables/elevation.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { makeRoundedProps } from \"../../composables/rounded.mjs\"; // Utilities\nimport { computed, nextTick, provide, ref, shallowRef, toRef } from 'vue';\nimport { clamp, createRange, getDecimals, propsFactory } from \"../../util/index.mjs\"; // Types\nexport const VSliderSymbol = Symbol.for('vuetify:v-slider');\nexport function getOffset(e, el, direction) {\n  const vertical = direction === 'vertical';\n  const rect = el.getBoundingClientRect();\n  const touch = 'touches' in e ? e.touches[0] : e;\n  return vertical ? touch.clientY - (rect.top + rect.height / 2) : touch.clientX - (rect.left + rect.width / 2);\n}\nfunction getPosition(e, position) {\n  if ('touches' in e && e.touches.length) return e.touches[0][position];else if ('changedTouches' in e && e.changedTouches.length) return e.changedTouches[0][position];else return e[position];\n}\nexport const makeSliderProps = propsFactory({\n  disabled: {\n    type: Boolean,\n    default: null\n  },\n  error: Boolean,\n  readonly: {\n    type: Boolean,\n    default: null\n  },\n  max: {\n    type: [Number, String],\n    default: 100\n  },\n  min: {\n    type: [Number, String],\n    default: 0\n  },\n  step: {\n    type: [Number, String],\n    default: 0\n  },\n  thumbColor: String,\n  thumbLabel: {\n    type: [Boolean, String],\n    default: undefined,\n    validator: v => typeof v === 'boolean' || v === 'always'\n  },\n  thumbSize: {\n    type: [Number, String],\n    default: 20\n  },\n  showTicks: {\n    type: [Boolean, String],\n    default: false,\n    validator: v => typeof v === 'boolean' || v === 'always'\n  },\n  ticks: {\n    type: [Array, Object]\n  },\n  tickSize: {\n    type: [Number, String],\n    default: 2\n  },\n  color: String,\n  trackColor: String,\n  trackFillColor: String,\n  trackSize: {\n    type: [Number, String],\n    default: 4\n  },\n  direction: {\n    type: String,\n    default: 'horizontal',\n    validator: v => ['vertical', 'horizontal'].includes(v)\n  },\n  reverse: Boolean,\n  ...makeRoundedProps(),\n  ...makeElevationProps({\n    elevation: 2\n  }),\n  ripple: {\n    type: Boolean,\n    default: true\n  }\n}, 'Slider');\nexport const useSteps = props => {\n  const min = computed(() => parseFloat(props.min));\n  const max = computed(() => parseFloat(props.max));\n  const step = computed(() => Number(props.step) > 0 ? parseFloat(props.step) : 0);\n  const decimals = computed(() => Math.max(getDecimals(step.value), getDecimals(min.value)));\n  function roundValue(value) {\n    value = parseFloat(value);\n    if (step.value <= 0) return value;\n    const clamped = clamp(value, min.value, max.value);\n    const offset = min.value % step.value;\n    const newValue = Math.round((clamped - offset) / step.value) * step.value + offset;\n    return parseFloat(Math.min(newValue, max.value).toFixed(decimals.value));\n  }\n  return {\n    min,\n    max,\n    step,\n    decimals,\n    roundValue\n  };\n};\nexport const useSlider = _ref => {\n  let {\n    props,\n    steps,\n    onSliderStart,\n    onSliderMove,\n    onSliderEnd,\n    getActiveThumb\n  } = _ref;\n  const {\n    isRtl\n  } = useRtl();\n  const isReversed = toRef(props, 'reverse');\n  const vertical = computed(() => props.direction === 'vertical');\n  const indexFromEnd = computed(() => vertical.value !== isReversed.value);\n  const {\n    min,\n    max,\n    step,\n    decimals,\n    roundValue\n  } = steps;\n  const thumbSize = computed(() => parseInt(props.thumbSize, 10));\n  const tickSize = computed(() => parseInt(props.tickSize, 10));\n  const trackSize = computed(() => parseInt(props.trackSize, 10));\n  const numTicks = computed(() => (max.value - min.value) / step.value);\n  const disabled = toRef(props, 'disabled');\n  const thumbColor = computed(() => props.error || props.disabled ? undefined : props.thumbColor ?? props.color);\n  const trackColor = computed(() => props.error || props.disabled ? undefined : props.trackColor ?? props.color);\n  const trackFillColor = computed(() => props.error || props.disabled ? undefined : props.trackFillColor ?? props.color);\n  const mousePressed = shallowRef(false);\n  const startOffset = shallowRef(0);\n  const trackContainerRef = ref();\n  const activeThumbRef = ref();\n  function parseMouseMove(e) {\n    const el = trackContainerRef.value?.$el;\n    if (!el) return;\n    const vertical = props.direction === 'vertical';\n    const start = vertical ? 'top' : 'left';\n    const length = vertical ? 'height' : 'width';\n    const position = vertical ? 'clientY' : 'clientX';\n    const {\n      [start]: trackStart,\n      [length]: trackLength\n    } = el.getBoundingClientRect();\n    const clickOffset = getPosition(e, position);\n\n    // It is possible for left to be NaN, force to number\n    let clickPos = Math.min(Math.max((clickOffset - trackStart - startOffset.value) / trackLength, 0), 1) || 0;\n    if (vertical ? indexFromEnd.value : indexFromEnd.value !== isRtl.value) clickPos = 1 - clickPos;\n    return roundValue(min.value + clickPos * (max.value - min.value));\n  }\n  const handleStop = e => {\n    const value = parseMouseMove(e);\n    if (value != null) {\n      onSliderEnd({\n        value\n      });\n    }\n    mousePressed.value = false;\n    startOffset.value = 0;\n  };\n  const handleStart = e => {\n    const value = parseMouseMove(e);\n    activeThumbRef.value = getActiveThumb(e);\n    if (!activeThumbRef.value) return;\n    mousePressed.value = true;\n    if (activeThumbRef.value.contains(e.target)) {\n      startOffset.value = getOffset(e, activeThumbRef.value, props.direction);\n    } else {\n      startOffset.value = 0;\n      if (value != null) {\n        onSliderMove({\n          value\n        });\n      }\n    }\n    if (value != null) {\n      onSliderStart({\n        value\n      });\n    }\n    nextTick(() => activeThumbRef.value?.focus());\n  };\n  const moveListenerOptions = {\n    passive: true,\n    capture: true\n  };\n  function onMouseMove(e) {\n    const value = parseMouseMove(e);\n    if (value != null) {\n      onSliderMove({\n        value\n      });\n    }\n  }\n  function onSliderMouseUp(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    handleStop(e);\n    window.removeEventListener('mousemove', onMouseMove, moveListenerOptions);\n    window.removeEventListener('mouseup', onSliderMouseUp);\n  }\n  function onSliderTouchend(e) {\n    handleStop(e);\n    window.removeEventListener('touchmove', onMouseMove, moveListenerOptions);\n    e.target?.removeEventListener('touchend', onSliderTouchend);\n  }\n  function onSliderTouchstart(e) {\n    handleStart(e);\n    window.addEventListener('touchmove', onMouseMove, moveListenerOptions);\n    e.target?.addEventListener('touchend', onSliderTouchend, {\n      passive: false\n    });\n  }\n  function onSliderMousedown(e) {\n    if (e.button !== 0) return;\n    e.preventDefault();\n    handleStart(e);\n    window.addEventListener('mousemove', onMouseMove, moveListenerOptions);\n    window.addEventListener('mouseup', onSliderMouseUp, {\n      passive: false\n    });\n  }\n  const position = val => {\n    const percentage = (val - min.value) / (max.value - min.value) * 100;\n    return clamp(isNaN(percentage) ? 0 : percentage, 0, 100);\n  };\n  const showTicks = toRef(props, 'showTicks');\n  const parsedTicks = computed(() => {\n    if (!showTicks.value) return [];\n    if (!props.ticks) {\n      return numTicks.value !== Infinity ? createRange(numTicks.value + 1).map(t => {\n        const value = min.value + t * step.value;\n        return {\n          value,\n          position: position(value)\n        };\n      }) : [];\n    }\n    if (Array.isArray(props.ticks)) return props.ticks.map(t => ({\n      value: t,\n      position: position(t),\n      label: t.toString()\n    }));\n    return Object.keys(props.ticks).map(key => ({\n      value: parseFloat(key),\n      position: position(parseFloat(key)),\n      label: props.ticks[key]\n    }));\n  });\n  const hasLabels = computed(() => parsedTicks.value.some(_ref2 => {\n    let {\n      label\n    } = _ref2;\n    return !!label;\n  }));\n  const data = {\n    activeThumbRef,\n    color: toRef(props, 'color'),\n    decimals,\n    disabled,\n    direction: toRef(props, 'direction'),\n    elevation: toRef(props, 'elevation'),\n    hasLabels,\n    isReversed,\n    indexFromEnd,\n    min,\n    max,\n    mousePressed,\n    numTicks,\n    onSliderMousedown,\n    onSliderTouchstart,\n    parsedTicks,\n    parseMouseMove,\n    position,\n    readonly: toRef(props, 'readonly'),\n    rounded: toRef(props, 'rounded'),\n    roundValue,\n    showTicks,\n    startOffset,\n    step,\n    thumbSize,\n    thumbColor,\n    thumbLabel: toRef(props, 'thumbLabel'),\n    ticks: toRef(props, 'ticks'),\n    tickSize,\n    trackColor,\n    trackContainerRef,\n    trackFillColor,\n    trackSize,\n    vertical\n  };\n  provide(VSliderSymbol, data);\n  return data;\n};\n//# sourceMappingURL=slider.mjs.map"],"version":3}