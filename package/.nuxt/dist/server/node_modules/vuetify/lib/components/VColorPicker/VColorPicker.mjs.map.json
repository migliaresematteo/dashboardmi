{"file":"VColorPicker.mjs","mappings":"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","names":["_createVNode","_mergeProps"],"sources":["../../../../../../../../node_modules/vuetify/lib/components/VColorPicker/VColorPicker.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VColorPicker.css\";\n\n// Components\nimport { VColorPickerCanvas } from \"./VColorPickerCanvas.mjs\";\nimport { VColorPickerEdit } from \"./VColorPickerEdit.mjs\";\nimport { VColorPickerPreview } from \"./VColorPickerPreview.mjs\";\nimport { VColorPickerSwatches } from \"./VColorPickerSwatches.mjs\";\nimport { makeVSheetProps, VSheet } from \"../VSheet/VSheet.mjs\"; // Composables\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, onBeforeMount, ref, watch } from 'vue';\nimport { extractColor, modes, nullColor } from \"./util/index.mjs\";\nimport { consoleWarn, defineComponent, HSVtoCSS, omit, parseColor, propsFactory, RGBtoHSV, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVColorPickerProps = propsFactory({\n  canvasHeight: {\n    type: [String, Number],\n    default: 150\n  },\n  disabled: Boolean,\n  dotSize: {\n    type: [Number, String],\n    default: 10\n  },\n  hideCanvas: Boolean,\n  hideSliders: Boolean,\n  hideInputs: Boolean,\n  mode: {\n    type: String,\n    default: 'rgba',\n    validator: v => Object.keys(modes).includes(v)\n  },\n  modes: {\n    type: Array,\n    default: () => Object.keys(modes),\n    validator: v => Array.isArray(v) && v.every(m => Object.keys(modes).includes(m))\n  },\n  showSwatches: Boolean,\n  swatches: Array,\n  swatchesMaxHeight: {\n    type: [Number, String],\n    default: 150\n  },\n  modelValue: {\n    type: [Object, String]\n  },\n  ...omit(makeVSheetProps({\n    width: 300\n  }), ['height', 'location', 'minHeight', 'maxHeight', 'minWidth', 'maxWidth'])\n}, 'VColorPicker');\nexport const VColorPicker = defineComponent({\n  name: 'VColorPicker',\n  props: makeVColorPickerProps(),\n  emits: {\n    'update:modelValue': color => true,\n    'update:mode': mode => true\n  },\n  setup(props) {\n    const mode = useProxiedModel(props, 'mode');\n    const hue = ref(null);\n    const model = useProxiedModel(props, 'modelValue', undefined, v => {\n      if (v == null || v === '') return null;\n      let c;\n      try {\n        c = RGBtoHSV(parseColor(v));\n      } catch (err) {\n        consoleWarn(err);\n        return null;\n      }\n      return c;\n    }, v => {\n      if (!v) return null;\n      return extractColor(v, props.modelValue);\n    });\n    const currentColor = computed(() => {\n      return model.value ? {\n        ...model.value,\n        h: hue.value ?? model.value.h\n      } : null;\n    });\n    const {\n      rtlClasses\n    } = useRtl();\n    let externalChange = true;\n    watch(model, v => {\n      if (!externalChange) {\n        // prevent hue shift from rgb conversion inaccuracy\n        externalChange = true;\n        return;\n      }\n      if (!v) return;\n      hue.value = v.h;\n    }, {\n      immediate: true\n    });\n    const updateColor = hsva => {\n      externalChange = false;\n      hue.value = hsva.h;\n      model.value = hsva;\n    };\n    onBeforeMount(() => {\n      if (!props.modes.includes(mode.value)) mode.value = props.modes[0];\n    });\n    provideDefaults({\n      VSlider: {\n        color: undefined,\n        trackColor: undefined,\n        trackFillColor: undefined\n      }\n    });\n    useRender(() => {\n      const sheetProps = VSheet.filterProps(props);\n      return _createVNode(VSheet, _mergeProps({\n        \"rounded\": props.rounded,\n        \"elevation\": props.elevation,\n        \"theme\": props.theme,\n        \"class\": ['v-color-picker', rtlClasses.value, props.class],\n        \"style\": [{\n          '--v-color-picker-color-hsv': HSVtoCSS({\n            ...(currentColor.value ?? nullColor),\n            a: 1\n          })\n        }, props.style]\n      }, sheetProps, {\n        \"maxWidth\": props.width\n      }), {\n        default: () => [!props.hideCanvas && _createVNode(VColorPickerCanvas, {\n          \"key\": \"canvas\",\n          \"color\": currentColor.value,\n          \"onUpdate:color\": updateColor,\n          \"disabled\": props.disabled,\n          \"dotSize\": props.dotSize,\n          \"width\": props.width,\n          \"height\": props.canvasHeight\n        }, null), (!props.hideSliders || !props.hideInputs) && _createVNode(\"div\", {\n          \"key\": \"controls\",\n          \"class\": \"v-color-picker__controls\"\n        }, [!props.hideSliders && _createVNode(VColorPickerPreview, {\n          \"key\": \"preview\",\n          \"color\": currentColor.value,\n          \"onUpdate:color\": updateColor,\n          \"hideAlpha\": !mode.value.endsWith('a'),\n          \"disabled\": props.disabled\n        }, null), !props.hideInputs && _createVNode(VColorPickerEdit, {\n          \"key\": \"edit\",\n          \"modes\": props.modes,\n          \"mode\": mode.value,\n          \"onUpdate:mode\": m => mode.value = m,\n          \"color\": currentColor.value,\n          \"onUpdate:color\": updateColor,\n          \"disabled\": props.disabled\n        }, null)]), props.showSwatches && _createVNode(VColorPickerSwatches, {\n          \"key\": \"swatches\",\n          \"color\": currentColor.value,\n          \"onUpdate:color\": updateColor,\n          \"maxHeight\": props.swatchesMaxHeight,\n          \"swatches\": props.swatches,\n          \"disabled\": props.disabled\n        }, null)]\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VColorPicker.mjs.map"],"version":3}