{"file":"VSwitch.mjs","mappings":"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","names":["_createVNode","_mergeProps","id","_Fragment","slotProps"],"sources":["../../../../../../../../node_modules/vuetify/lib/components/VSwitch/VSwitch.mjs"],"sourcesContent":["import { createVNode as _createVNode, Fragment as _Fragment, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VSwitch.css\";\n\n// Components\nimport { VScaleTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/VDefaultsProvider.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VProgressCircular } from \"../VProgressCircular/index.mjs\";\nimport { makeVSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.mjs\"; // Composables\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { LoaderSlot, useLoader } from \"../../composables/loader.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, ref } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, IN_BROWSER, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVSwitchProps = propsFactory({\n  indeterminate: Boolean,\n  inset: Boolean,\n  flat: Boolean,\n  loading: {\n    type: [Boolean, String],\n    default: false\n  },\n  ...makeVInputProps(),\n  ...makeVSelectionControlProps()\n}, 'VSwitch');\nexport const VSwitch = genericComponent()({\n  name: 'VSwitch',\n  inheritAttrs: false,\n  props: makeVSwitchProps(),\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': value => true,\n    'update:indeterminate': value => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const indeterminate = useProxiedModel(props, 'indeterminate');\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const control = ref();\n    const isForcedColorsModeActive = IN_BROWSER && window.matchMedia('(forced-colors: active)').matches;\n    const loaderColor = computed(() => {\n      return typeof props.loading === 'string' && props.loading !== '' ? props.loading : props.color;\n    });\n    const uid = getUid();\n    const id = computed(() => props.id || `switch-${uid}`);\n    function onChange() {\n      if (indeterminate.value) {\n        indeterminate.value = false;\n      }\n    }\n    function onTrackClick(e) {\n      e.stopPropagation();\n      e.preventDefault();\n      control.value?.input?.click();\n    }\n    useRender(() => {\n      const [rootAttrs, controlAttrs] = filterInputAttrs(attrs);\n      const inputProps = VInput.filterProps(props);\n      const controlProps = VSelectionControl.filterProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"class\": ['v-switch', {\n          'v-switch--flat': props.flat\n        }, {\n          'v-switch--inset': props.inset\n        }, {\n          'v-switch--indeterminate': indeterminate.value\n        }, loaderClasses.value, props.class]\n      }, rootAttrs, inputProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"id\": id.value,\n        \"focused\": isFocused.value,\n        \"style\": props.style\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            messagesId,\n            isDisabled,\n            isReadonly,\n            isValid\n          } = _ref2;\n          const slotProps = {\n            model,\n            isValid\n          };\n          return _createVNode(VSelectionControl, _mergeProps({\n            \"ref\": control\n          }, controlProps, {\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": [$event => model.value = $event, onChange],\n            \"id\": id.value,\n            \"aria-describedby\": messagesId.value,\n            \"type\": \"checkbox\",\n            \"aria-checked\": indeterminate.value ? 'mixed' : undefined,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value,\n            \"onFocus\": focus,\n            \"onBlur\": blur\n          }, controlAttrs), {\n            ...slots,\n            default: _ref3 => {\n              let {\n                backgroundColorClasses,\n                backgroundColorStyles\n              } = _ref3;\n              return _createVNode(\"div\", {\n                \"class\": ['v-switch__track', !isForcedColorsModeActive ? backgroundColorClasses.value : undefined],\n                \"style\": backgroundColorStyles.value,\n                \"onClick\": onTrackClick\n              }, [slots['track-true'] && _createVNode(\"div\", {\n                \"key\": \"prepend\",\n                \"class\": \"v-switch__track-true\"\n              }, [slots['track-true'](slotProps)]), slots['track-false'] && _createVNode(\"div\", {\n                \"key\": \"append\",\n                \"class\": \"v-switch__track-false\"\n              }, [slots['track-false'](slotProps)])]);\n            },\n            input: _ref4 => {\n              let {\n                inputNode,\n                icon,\n                backgroundColorClasses,\n                backgroundColorStyles\n              } = _ref4;\n              return _createVNode(_Fragment, null, [inputNode, _createVNode(\"div\", {\n                \"class\": ['v-switch__thumb', {\n                  'v-switch__thumb--filled': icon || props.loading\n                }, props.inset || isForcedColorsModeActive ? undefined : backgroundColorClasses.value],\n                \"style\": props.inset ? undefined : backgroundColorStyles.value\n              }, [slots.thumb ? _createVNode(VDefaultsProvider, {\n                \"defaults\": {\n                  VIcon: {\n                    icon,\n                    size: 'x-small'\n                  }\n                }\n              }, {\n                default: () => [slots.thumb({\n                  ...slotProps,\n                  icon\n                })]\n              }) : _createVNode(VScaleTransition, null, {\n                default: () => [!props.loading ? icon && _createVNode(VIcon, {\n                  \"key\": String(icon),\n                  \"icon\": icon,\n                  \"size\": \"x-small\"\n                }, null) : _createVNode(LoaderSlot, {\n                  \"name\": \"v-switch\",\n                  \"active\": true,\n                  \"color\": isValid.value === false ? undefined : loaderColor.value\n                }, {\n                  default: slotProps => slots.loader ? slots.loader(slotProps) : _createVNode(VProgressCircular, {\n                    \"active\": slotProps.isActive,\n                    \"color\": slotProps.color,\n                    \"indeterminate\": true,\n                    \"size\": \"16\",\n                    \"width\": \"2\"\n                  }, null)\n                })]\n              })])]);\n            }\n          });\n        }\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VSwitch.mjs.map"],"version":3}