{"file":"VWindowItem.mjs","mappings":"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","names":["_createVNode","_withDirectives","_vShow"],"sources":["../../../../../../../../node_modules/vuetify/lib/components/VWindow/VWindowItem.mjs"],"sourcesContent":["import { vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives } from \"vue\";\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\";\nimport { MaybeTransition } from \"../../composables/transition.mjs\"; // Directives\nimport Touch from \"../../directives/touch/index.mjs\"; // Utilities\nimport { computed, inject, nextTick, shallowRef } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nimport { VWindowGroupSymbol, VWindowSymbol } from \"./VWindow.mjs\";\nexport const makeVWindowItemProps = propsFactory({\n  reverseTransition: {\n    type: [Boolean, String],\n    default: undefined\n  },\n  transition: {\n    type: [Boolean, String],\n    default: undefined\n  },\n  ...makeComponentProps(),\n  ...makeGroupItemProps(),\n  ...makeLazyProps()\n}, 'VWindowItem');\nexport const VWindowItem = genericComponent()({\n  name: 'VWindowItem',\n  directives: {\n    Touch\n  },\n  props: makeVWindowItemProps(),\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const window = inject(VWindowSymbol);\n    const groupItem = useGroupItem(props, VWindowGroupSymbol);\n    const {\n      isBooted\n    } = useSsrBoot();\n    if (!window || !groupItem) throw new Error('[Vuetify] VWindowItem must be used inside VWindow');\n    const isTransitioning = shallowRef(false);\n    const hasTransition = computed(() => isBooted.value && (window.isReversed.value ? props.reverseTransition !== false : props.transition !== false));\n    function onAfterTransition() {\n      if (!isTransitioning.value || !window) {\n        return;\n      }\n\n      // Finalize transition state.\n      isTransitioning.value = false;\n      if (window.transitionCount.value > 0) {\n        window.transitionCount.value -= 1;\n\n        // Remove container height if we are out of transition.\n        if (window.transitionCount.value === 0) {\n          window.transitionHeight.value = undefined;\n        }\n      }\n    }\n    function onBeforeTransition() {\n      if (isTransitioning.value || !window) {\n        return;\n      }\n\n      // Initialize transition state here.\n      isTransitioning.value = true;\n      if (window.transitionCount.value === 0) {\n        // Set initial height for height transition.\n        window.transitionHeight.value = convertToUnit(window.rootRef.value?.clientHeight);\n      }\n      window.transitionCount.value += 1;\n    }\n    function onTransitionCancelled() {\n      onAfterTransition(); // This should have the same path as normal transition end.\n    }\n    function onEnterTransition(el) {\n      if (!isTransitioning.value) {\n        return;\n      }\n      nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!hasTransition.value || !isTransitioning.value || !window) {\n          return;\n        }\n\n        // Set transition target height.\n        window.transitionHeight.value = convertToUnit(el.clientHeight);\n      });\n    }\n    const transition = computed(() => {\n      const name = window.isReversed.value ? props.reverseTransition : props.transition;\n      return !hasTransition.value ? false : {\n        name: typeof name !== 'string' ? window.transition.value : name,\n        onBeforeEnter: onBeforeTransition,\n        onAfterEnter: onAfterTransition,\n        onEnterCancelled: onTransitionCancelled,\n        onBeforeLeave: onBeforeTransition,\n        onAfterLeave: onAfterTransition,\n        onLeaveCancelled: onTransitionCancelled,\n        onEnter: onEnterTransition\n      };\n    });\n    const {\n      hasContent\n    } = useLazy(props, groupItem.isSelected);\n    useRender(() => _createVNode(MaybeTransition, {\n      \"transition\": transition.value,\n      \"disabled\": !isBooted.value\n    }, {\n      default: () => [_withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-window-item', groupItem.selectedClass.value, props.class],\n        \"style\": props.style\n      }, [hasContent.value && slots.default?.()]), [[_vShow, groupItem.isSelected.value]])]\n    }));\n    return {\n      groupItem\n    };\n  }\n});\n//# sourceMappingURL=VWindowItem.mjs.map"],"version":3}