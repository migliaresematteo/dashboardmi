{"version":3,"file":"useActivator.mjs","sources":["../../../../../../../../node_modules/vuetify/lib/components/VOverlay/useActivator.mjs"],"sourcesContent":["// Components\nimport { VMenuSymbol } from \"../VMenu/shared.mjs\"; // Composables\nimport { makeDelayProps, useDelay } from \"../../composables/delay.mjs\"; // Utilities\nimport { computed, effectScope, inject, mergeProps, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue';\nimport { bindProps, getCurrentInstance, IN_BROWSER, matchesSelector, propsFactory, templateRef, unbindProps } from \"../../util/index.mjs\"; // Types\nexport const makeActivatorProps = propsFactory({\n  target: [String, Object],\n  activator: [String, Object],\n  activatorProps: {\n    type: Object,\n    default: () => ({})\n  },\n  openOnClick: {\n    type: Boolean,\n    default: undefined\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined\n  },\n  closeOnContentClick: Boolean,\n  ...makeDelayProps()\n}, 'VOverlay-activator');\nexport function useActivator(props, _ref) {\n  let {\n    isActive,\n    isTop,\n    contentEl\n  } = _ref;\n  const vm = getCurrentInstance('useActivator');\n  const activatorEl = ref();\n  let isHovered = false;\n  let isFocused = false;\n  let firstEnter = true;\n  const openOnFocus = computed(() => props.openOnFocus || props.openOnFocus == null && props.openOnHover);\n  const openOnClick = computed(() => props.openOnClick || props.openOnClick == null && !props.openOnHover && !openOnFocus.value);\n  const {\n    runOpenDelay,\n    runCloseDelay\n  } = useDelay(props, value => {\n    if (value === (props.openOnHover && isHovered || openOnFocus.value && isFocused) && !(props.openOnHover && isActive.value && !isTop.value)) {\n      if (isActive.value !== value) {\n        firstEnter = true;\n      }\n      isActive.value = value;\n    }\n  });\n  const cursorTarget = ref();\n  const availableEvents = {\n    onClick: e => {\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      if (!isActive.value) {\n        cursorTarget.value = [e.clientX, e.clientY];\n      }\n      isActive.value = !isActive.value;\n    },\n    onMouseenter: e => {\n      if (e.sourceCapabilities?.firesTouchEvents) return;\n      isHovered = true;\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    onMouseleave: e => {\n      isHovered = false;\n      runCloseDelay();\n    },\n    onFocus: e => {\n      if (matchesSelector(e.target, ':focus-visible') === false) return;\n      isFocused = true;\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    onBlur: e => {\n      isFocused = false;\n      e.stopPropagation();\n      runCloseDelay();\n    }\n  };\n  const activatorEvents = computed(() => {\n    const events = {};\n    if (openOnClick.value) {\n      events.onClick = availableEvents.onClick;\n    }\n    if (props.openOnHover) {\n      events.onMouseenter = availableEvents.onMouseenter;\n      events.onMouseleave = availableEvents.onMouseleave;\n    }\n    if (openOnFocus.value) {\n      events.onFocus = availableEvents.onFocus;\n      events.onBlur = availableEvents.onBlur;\n    }\n    return events;\n  });\n  const contentEvents = computed(() => {\n    const events = {};\n    if (props.openOnHover) {\n      events.onMouseenter = () => {\n        isHovered = true;\n        runOpenDelay();\n      };\n      events.onMouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n    if (openOnFocus.value) {\n      events.onFocusin = () => {\n        isFocused = true;\n        runOpenDelay();\n      };\n      events.onFocusout = () => {\n        isFocused = false;\n        runCloseDelay();\n      };\n    }\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null);\n      events.onClick = () => {\n        isActive.value = false;\n        menu?.closeParents();\n      };\n    }\n    return events;\n  });\n  const scrimEvents = computed(() => {\n    const events = {};\n    if (props.openOnHover) {\n      events.onMouseenter = () => {\n        if (firstEnter) {\n          isHovered = true;\n          firstEnter = false;\n          runOpenDelay();\n        }\n      };\n      events.onMouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n    return events;\n  });\n  watch(isTop, val => {\n    if (val && (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused) || openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered)) && !contentEl.value?.contains(document.activeElement)) {\n      isActive.value = false;\n    }\n  });\n  watch(isActive, val => {\n    if (!val) {\n      setTimeout(() => {\n        cursorTarget.value = undefined;\n      });\n    }\n  }, {\n    flush: 'post'\n  });\n  const activatorRef = templateRef();\n  watchEffect(() => {\n    if (!activatorRef.value) return;\n    nextTick(() => {\n      activatorEl.value = activatorRef.el;\n    });\n  });\n  const targetRef = templateRef();\n  const target = computed(() => {\n    if (props.target === 'cursor' && cursorTarget.value) return cursorTarget.value;\n    if (targetRef.value) return targetRef.el;\n    return getTarget(props.target, vm) || activatorEl.value;\n  });\n  const targetEl = computed(() => {\n    return Array.isArray(target.value) ? undefined : target.value;\n  });\n  let scope;\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope();\n      scope.run(() => {\n        _useActivator(props, vm, {\n          activatorEl,\n          activatorEvents\n        });\n      });\n    } else if (scope) {\n      scope.stop();\n    }\n  }, {\n    flush: 'post',\n    immediate: true\n  });\n  onScopeDispose(() => {\n    scope?.stop();\n  });\n  return {\n    activatorEl,\n    activatorRef,\n    target,\n    targetEl,\n    targetRef,\n    activatorEvents,\n    contentEvents,\n    scrimEvents\n  };\n}\nfunction _useActivator(props, vm, _ref2) {\n  let {\n    activatorEl,\n    activatorEvents\n  } = _ref2;\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal);\n      activator && unbindActivatorProps(activator);\n    }\n    if (val) {\n      nextTick(() => bindActivatorProps());\n    }\n  }, {\n    immediate: true\n  });\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps();\n  });\n  onScopeDispose(() => {\n    unbindActivatorProps();\n  });\n  function bindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\n    if (!el) return;\n    bindProps(el, mergeProps(activatorEvents.value, _props));\n  }\n  function unbindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\n    if (!el) return;\n    unbindProps(el, mergeProps(activatorEvents.value, _props));\n  }\n  function getActivator() {\n    let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.activator;\n    const activator = getTarget(selector, vm);\n\n    // The activator should only be a valid element (Ignore comments and text nodes)\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : undefined;\n    return activatorEl.value;\n  }\n}\nfunction getTarget(selector, vm) {\n  if (!selector) return;\n  let target;\n  if (selector === 'parent') {\n    let el = vm?.proxy?.$el?.parentNode;\n    while (el?.hasAttribute('data-no-activator')) {\n      el = el.parentNode;\n    }\n    target = el;\n  } else if (typeof selector === 'string') {\n    // Selector\n    target = document.querySelector(selector);\n  } else if ('$el' in selector) {\n    // Component (ref)\n    target = selector.$el;\n  } else {\n    // HTMLElement | Element | [x, y]\n    target = selector;\n  }\n  return target;\n}\n//# sourceMappingURL=useActivator.mjs.map"],"names":[],"mappings":"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","x_google_ignoreList":[0]}