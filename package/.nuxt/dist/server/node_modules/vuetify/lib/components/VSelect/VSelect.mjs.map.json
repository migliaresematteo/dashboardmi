{"file":"VSelect.mjs","mappings":"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","names":["item","_createVNode","_mergeProps","_Fragment","_a","_createTextVNode"],"sources":["../../../../../../../../node_modules/vuetify/lib/components/VSelect/VSelect.mjs"],"sourcesContent":["import { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps, createTextVNode as _createTextVNode } from \"vue\";\n// Styles\nimport \"./VSelect.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { makeVTextFieldProps, VTextField } from \"../VTextField/VTextField.mjs\";\nimport { VVirtualScroll } from \"../VVirtualScroll/index.mjs\"; // Composables\nimport { useScrolling } from \"./useScrolling.mjs\";\nimport { useForm } from \"../../composables/form.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeItemsProps, useItems } from \"../../composables/list-items.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\"; // Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue';\nimport { checkPrintable, deepEqual, ensureValidVNode, genericComponent, IN_BROWSER, matchesSelector, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close'\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open'\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown'\n  },\n  menuProps: {\n    type: Object\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText'\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n  ...makeItemsProps({\n    itemChildren: false\n  })\n}, 'Select');\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox'\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({\n    transition: {\n      component: VDialogTransition\n    }\n  })\n}, 'VSelect');\nexport const VSelect = genericComponent()({\n  name: 'VSelect',\n  props: makeVSelectProps(),\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': value => true,\n    'update:menu': ue => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const vMenuRef = ref();\n    const vVirtualScrollRef = ref();\n    const _menu = useProxiedModel(props, 'menu');\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren.size) return;\n        _menu.value = v;\n      }\n    });\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(v === null ? [null] : wrapInArray(v)), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : model.value.length;\n    });\n    const form = useForm(props);\n    const selectedValues = computed(() => model.value.map(selection => selection.value));\n    const isFocused = shallowRef(false);\n    const label = computed(() => menu.value ? props.closeText : props.openText);\n    let keyboardLookupPrefix = '';\n    let keyboardLookupLastTime;\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => (props.valueComparator || deepEqual)(s, item)));\n      }\n      return items.value;\n    });\n    const menuDisabled = computed(() => props.hideNoData && !displayItems.value.length || form.isReadonly.value || form.isDisabled.value);\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox' // Set aria-haspopup to 'listbox'\n        }\n      };\n    });\n    const listRef = ref();\n    const listEvents = useScrolling(listRef, vTextFieldRef);\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n    function onMousedownControl() {\n      if (menuDisabled.value) return;\n      menu.value = !menu.value;\n    }\n    function onListKeydown(e) {\n      if (checkPrintable(e)) {\n        onKeydown(e);\n      }\n    }\n    function onKeydown(e) {\n      if (!e.key || form.isReadonly.value) return;\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault();\n      }\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true;\n      }\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false;\n      }\n      if (e.key === 'Home') {\n        listRef.value?.focus('first');\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last');\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000; // milliseconds\n\n      if (!checkPrintable(e)) return;\n      const now = performance.now();\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = '';\n      }\n      keyboardLookupPrefix += e.key.toLowerCase();\n      keyboardLookupLastTime = now;\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix));\n      if (item !== undefined) {\n        model.value = [item];\n        const index = displayItems.value.indexOf(item);\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);\n        });\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select(item) {\n      let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (item.props.disabled) return;\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value));\n        const add = set == null ? !~index : set;\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        } else if (add) {\n          model.value = [...model.value, item];\n        }\n      } else {\n        const add = set !== false;\n        model.value = add ? [item] : [];\n        nextTick(() => {\n          menu.value = false;\n        });\n      }\n    }\n    function onBlur(e) {\n      if (!listRef.value?.$el.contains(e.relatedTarget)) {\n        menu.value = false;\n      }\n    }\n    function onAfterEnter() {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems();\n      }\n    }\n    function onAfterLeave() {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus();\n      }\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n    function onModelUpdate(v) {\n      if (v == null) model.value = [];else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v);\n        if (item) {\n          select(item);\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = '';\n      }\n    }\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(item => model.value.some(s => (props.valueComparator || deepEqual)(s.value, item.value)));\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);\n        });\n      }\n    });\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return;\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true;\n      }\n    });\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip);\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots['prepend-item'] || slots['append-item'] || slots['no-data']);\n      const isDirty = model.value.length > 0;\n      const textFieldProps = VTextField.filterProps(props);\n      const placeholder = isDirty || !isFocused.value && props.label && !props.persistentPlaceholder ? undefined : props.placeholder;\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": model.value.map(v => v.props.value).join(', '),\n        \"onUpdate:modelValue\": onModelUpdate,\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": $event => isFocused.value = $event,\n        \"validationValue\": model.externalValue,\n        \"counterValue\": counterValue.value,\n        \"dirty\": isDirty,\n        \"class\": ['v-select', {\n          'v-select--active-menu': menu.value,\n          'v-select--chips': !!props.chips,\n          [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n          'v-select--selected': model.value.length,\n          'v-select--selection-slot': !!slots.selection\n        }, props.class],\n        \"style\": props.style,\n        \"inputmode\": \"none\",\n        \"placeholder\": placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onBlur\": onBlur,\n        \"onKeydown\": onKeydown,\n        \"aria-label\": t(label.value),\n        \"title\": t(label.value)\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-select__content\",\n          \"disabled\": menuDisabled.value,\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition,\n          \"onAfterEnter\": onAfterEnter,\n          \"onAfterLeave\": onAfterLeave\n        }, computedMenuProps.value), {\n          default: () => [hasList && _createVNode(VList, _mergeProps({\n            \"ref\": listRef,\n            \"selected\": selectedValues.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n            \"onMousedown\": e => e.preventDefault(),\n            \"onKeydown\": onListKeydown,\n            \"onFocusin\": onFocusin,\n            \"tabindex\": \"-1\",\n            \"aria-live\": \"polite\",\n            \"color\": props.itemColor ?? props.color\n          }, listEvents, props.listProps), {\n            default: () => [slots['prepend-item']?.(), !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\n              \"key\": \"no-data\",\n              \"title\": t(props.noDataText)\n            }, null)), _createVNode(VVirtualScroll, {\n              \"ref\": vVirtualScrollRef,\n              \"renderless\": true,\n              \"items\": displayItems.value\n            }, {\n              default: _ref2 => {\n                let {\n                  item,\n                  index,\n                  itemRef\n                } = _ref2;\n                const itemProps = mergeProps(item.props, {\n                  ref: itemRef,\n                  key: item.value,\n                  onClick: () => select(item, null)\n                });\n                return slots.item?.({\n                  item,\n                  index,\n                  props: itemProps\n                }) ?? _createVNode(VListItem, _mergeProps(itemProps, {\n                  \"role\": \"option\"\n                }), {\n                  prepend: _ref3 => {\n                    let {\n                      isSelected\n                    } = _ref3;\n                    return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                      \"key\": item.value,\n                      \"modelValue\": isSelected,\n                      \"ripple\": false,\n                      \"tabindex\": \"-1\"\n                    }, null) : undefined, item.props.prependAvatar && _createVNode(VAvatar, {\n                      \"image\": item.props.prependAvatar\n                    }, null), item.props.prependIcon && _createVNode(VIcon, {\n                      \"icon\": item.props.prependIcon\n                    }, null)]);\n                  }\n                });\n              }\n            }), slots['append-item']?.()]\n          })]\n        }), model.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item, false);\n          }\n          const slotProps = {\n            'onClick:close': onChipClose,\n            onKeydown(e) {\n              if (e.key !== 'Enter' && e.key !== ' ') return;\n              e.preventDefault();\n              e.stopPropagation();\n              onChipClose(e);\n            },\n            onMousedown(e) {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n            modelValue: true,\n            'onUpdate:modelValue': undefined\n          };\n          const hasSlot = hasChips ? !!slots.chip : !!slots.selection;\n          const slotContent = hasSlot ? ensureValidVNode(hasChips ? slots.chip({\n            item,\n            index,\n            props: slotProps\n          }) : slots.selection({\n            item,\n            index\n          })) : undefined;\n          if (hasSlot && !slotContent) return undefined;\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": \"v-select__selection\"\n          }, [hasChips ? !slots.chip ? _createVNode(VChip, _mergeProps({\n            \"key\": \"chip\",\n            \"closable\": props.closableChips,\n            \"size\": \"small\",\n            \"text\": item.title,\n            \"disabled\": item.props.disabled\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"chip-defaults\",\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slotContent]\n          }) : slotContent ?? _createVNode(\"span\", {\n            \"class\": \"v-select__selection-text\"\n          }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-select__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })]),\n        'append-inner': function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(_Fragment, null, [slots['append-inner']?.(...args), props.menuIcon ? _createVNode(VIcon, {\n            \"class\": \"v-select__menu-icon\",\n            \"icon\": props.menuIcon\n          }, null) : undefined]);\n        }\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      menu,\n      select\n    }, vTextFieldRef);\n  }\n});\n//# sourceMappingURL=VSelect.mjs.map"],"version":3}