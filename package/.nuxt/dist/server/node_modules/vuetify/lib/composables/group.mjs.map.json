{"file":"group.mjs","mappings":"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","names":["value","item"],"sources":["../../../../../../../node_modules/vuetify/lib/composables/group.mjs"],"sourcesContent":["// Composables\nimport { useProxiedModel } from \"./proxiedModel.mjs\"; // Utilities\nimport { computed, inject, onBeforeUnmount, onMounted, onUpdated, provide, reactive, toRef, unref, watch } from 'vue';\nimport { consoleWarn, deepEqual, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory, wrapInArray } from \"../util/index.mjs\"; // Types\nexport const makeGroupProps = propsFactory({\n  modelValue: {\n    type: null,\n    default: undefined\n  },\n  multiple: Boolean,\n  mandatory: [Boolean, String],\n  max: Number,\n  selectedClass: String,\n  disabled: Boolean\n}, 'group');\nexport const makeGroupItemProps = propsFactory({\n  value: null,\n  disabled: Boolean,\n  selectedClass: String\n}, 'group-item');\n\n// Composables\n\nexport function useGroupItem(props, injectKey) {\n  let required = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const vm = getCurrentInstance('useGroupItem');\n  if (!vm) {\n    throw new Error('[Vuetify] useGroupItem composable must be used inside a component setup function');\n  }\n  const id = getUid();\n  provide(Symbol.for(`${injectKey.description}:id`), id);\n  const group = inject(injectKey, null);\n  if (!group) {\n    if (!required) return group;\n    throw new Error(`[Vuetify] Could not find useGroup injection with symbol ${injectKey.description}`);\n  }\n  const value = toRef(props, 'value');\n  const disabled = computed(() => !!(group.disabled.value || props.disabled));\n  group.register({\n    id,\n    value,\n    disabled\n  }, vm);\n  onBeforeUnmount(() => {\n    group.unregister(id);\n  });\n  const isSelected = computed(() => {\n    return group.isSelected(id);\n  });\n  const isFirst = computed(() => {\n    return group.items.value[0].id === id;\n  });\n  const isLast = computed(() => {\n    return group.items.value[group.items.value.length - 1].id === id;\n  });\n  const selectedClass = computed(() => isSelected.value && [group.selectedClass.value, props.selectedClass]);\n  watch(isSelected, value => {\n    vm.emit('group:selected', {\n      value\n    });\n  }, {\n    flush: 'sync'\n  });\n  return {\n    id,\n    isSelected,\n    isFirst,\n    isLast,\n    toggle: () => group.select(id, !isSelected.value),\n    select: value => group.select(id, value),\n    selectedClass,\n    value,\n    disabled,\n    group\n  };\n}\nexport function useGroup(props, injectKey) {\n  let isUnmounted = false;\n  const items = reactive([]);\n  const selected = useProxiedModel(props, 'modelValue', [], v => {\n    if (v == null) return [];\n    return getIds(items, wrapInArray(v));\n  }, v => {\n    const arr = getValues(items, v);\n    return props.multiple ? arr : arr[0];\n  });\n  const groupVm = getCurrentInstance('useGroup');\n  function register(item, vm) {\n    // Is there a better way to fix this typing?\n    const unwrapped = item;\n    const key = Symbol.for(`${injectKey.description}:id`);\n    const children = findChildrenWithProvide(key, groupVm?.vnode);\n    const index = children.indexOf(vm);\n    if (unref(unwrapped.value) == null) {\n      unwrapped.value = index;\n      unwrapped.useIndexAsValue = true;\n    }\n    if (index > -1) {\n      items.splice(index, 0, unwrapped);\n    } else {\n      items.push(unwrapped);\n    }\n  }\n  function unregister(id) {\n    if (isUnmounted) return;\n\n    // TODO: re-evaluate this line's importance in the future\n    // should we only modify the model if mandatory is set.\n    // selected.value = selected.value.filter(v => v !== id)\n\n    forceMandatoryValue();\n    const index = items.findIndex(item => item.id === id);\n    items.splice(index, 1);\n  }\n\n  // If mandatory and nothing is selected, then select first non-disabled item\n  function forceMandatoryValue() {\n    const item = items.find(item => !item.disabled);\n    if (item && props.mandatory === 'force' && !selected.value.length) {\n      selected.value = [item.id];\n    }\n  }\n  onMounted(() => {\n    forceMandatoryValue();\n  });\n  onBeforeUnmount(() => {\n    isUnmounted = true;\n  });\n  onUpdated(() => {\n    // #19655 update the items that use the index as the value.\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].useIndexAsValue) {\n        items[i].value = i;\n      }\n    }\n  });\n  function select(id, value) {\n    const item = items.find(item => item.id === id);\n    if (value && item?.disabled) return;\n    if (props.multiple) {\n      const internalValue = selected.value.slice();\n      const index = internalValue.findIndex(v => v === id);\n      const isSelected = ~index;\n      value = value ?? !isSelected;\n\n      // We can't remove value if group is\n      // mandatory, value already exists,\n      // and it is the only value\n      if (isSelected && props.mandatory && internalValue.length <= 1) return;\n\n      // We can't add value if it would\n      // cause max limit to be exceeded\n      if (!isSelected && props.max != null && internalValue.length + 1 > props.max) return;\n      if (index < 0 && value) internalValue.push(id);else if (index >= 0 && !value) internalValue.splice(index, 1);\n      selected.value = internalValue;\n    } else {\n      const isSelected = selected.value.includes(id);\n      if (props.mandatory && isSelected) return;\n      selected.value = value ?? !isSelected ? [id] : [];\n    }\n  }\n  function step(offset) {\n    // getting an offset from selected value obviously won't work with multiple values\n    if (props.multiple) consoleWarn('This method is not supported when using \"multiple\" prop');\n    if (!selected.value.length) {\n      const item = items.find(item => !item.disabled);\n      item && (selected.value = [item.id]);\n    } else {\n      const currentId = selected.value[0];\n      const currentIndex = items.findIndex(i => i.id === currentId);\n      let newIndex = (currentIndex + offset) % items.length;\n      let newItem = items[newIndex];\n      while (newItem.disabled && newIndex !== currentIndex) {\n        newIndex = (newIndex + offset) % items.length;\n        newItem = items[newIndex];\n      }\n      if (newItem.disabled) return;\n      selected.value = [items[newIndex].id];\n    }\n  }\n  const state = {\n    register,\n    unregister,\n    selected,\n    select,\n    disabled: toRef(props, 'disabled'),\n    prev: () => step(items.length - 1),\n    next: () => step(1),\n    isSelected: id => selected.value.includes(id),\n    selectedClass: computed(() => props.selectedClass),\n    items: computed(() => items),\n    getItemIndex: value => getItemIndex(items, value)\n  };\n  provide(injectKey, state);\n  return state;\n}\nfunction getItemIndex(items, value) {\n  const ids = getIds(items, [value]);\n  if (!ids.length) return -1;\n  return items.findIndex(item => item.id === ids[0]);\n}\nfunction getIds(items, modelValue) {\n  const ids = [];\n  modelValue.forEach(value => {\n    const item = items.find(item => deepEqual(value, item.value));\n    const itemByIndex = items[value];\n    if (item?.value != null) {\n      ids.push(item.id);\n    } else if (itemByIndex != null) {\n      ids.push(itemByIndex.id);\n    }\n  });\n  return ids;\n}\nfunction getValues(items, ids) {\n  const values = [];\n  ids.forEach(id => {\n    const itemIndex = items.findIndex(item => item.id === id);\n    if (~itemIndex) {\n      const item = items[itemIndex];\n      values.push(item.value != null ? item.value : itemIndex);\n    }\n  });\n  return values;\n}\n//# sourceMappingURL=group.mjs.map"],"version":3}