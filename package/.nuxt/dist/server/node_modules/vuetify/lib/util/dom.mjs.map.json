{"file":"dom.mjs","mappings":"AAKO,SAAS,aAAa,MAAM;AAE7B,MAAA,OAAO,KAAK,gBAAgB,YAAY;AAEnC,WAAA,KAAK,WAAY,QAAO,KAAK;AAGhC,QAAA,SAAS,OAAiB,QAAA;AACvB,WAAA;AAAA,EAAA;AAEH,QAAA,OAAO,KAAK,YAAY;AAG1B,MAAA,SAAS,UAAY,KAAK,YAAY;AAAA,IACxC,UAAU;AAAA,EAAA,CACX,MAAM,OAAiB,QAAA;AACjB,SAAA;AACT;","names":[],"sources":["../../../../../../../node_modules/vuetify/lib/util/dom.mjs"],"sourcesContent":["/**\n * Returns:\n *  - 'null' if the node is not attached to the DOM\n *  - the root node (HTMLDocument | ShadowRoot) otherwise\n */\nexport function attachedRoot(node) {\n  /* istanbul ignore next */\n  if (typeof node.getRootNode !== 'function') {\n    // Shadow DOM not supported (IE11), lets find the root of this node\n    while (node.parentNode) node = node.parentNode;\n\n    // The root parent is the document if the node is attached to the DOM\n    if (node !== document) return null;\n    return document;\n  }\n  const root = node.getRootNode();\n\n  // The composed root node is the document if the node is attached to the DOM\n  if (root !== document && root.getRootNode({\n    composed: true\n  }) !== document) return null;\n  return root;\n}\n//# sourceMappingURL=dom.mjs.map"],"version":3}