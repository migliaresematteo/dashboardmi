{"file":"animation.mjs","mappings":";AAGO,SAAS,kBAAkB,IAAI;AACpC,QAAM,OAAO,GAAG,sBAAuB;AACvC,QAAM,QAAQ,iBAAiB,EAAE;AACjC,QAAM,KAAK,MAAM;AACjB,MAAI,IAAI;AACN,QAAI,IAAI,IAAI,IAAI,IAAI;AACpB,QAAI,GAAG,WAAW,WAAW,GAAG;AAC9B,WAAK,GAAG,MAAM,GAAG,EAAE,EAAE,MAAM,IAAI;AAC/B,WAAK,OAAO,GAAG,CAAC,CAAC;AACjB,WAAK,OAAO,GAAG,CAAC,CAAC;AACjB,WAAK,OAAO,GAAG,EAAE,CAAC;AAClB,WAAK,OAAO,GAAG,EAAE,CAAC;AAAA,IACnB,WAAU,GAAG,WAAW,SAAS,GAAG;AACnC,WAAK,GAAG,MAAM,GAAG,EAAE,EAAE,MAAM,IAAI;AAC/B,WAAK,OAAO,GAAG,CAAC,CAAC;AACjB,WAAK,OAAO,GAAG,CAAC,CAAC;AACjB,WAAK,OAAO,GAAG,CAAC,CAAC;AACjB,WAAK,OAAO,GAAG,CAAC,CAAC;AAAA,IACvB,OAAW;AACL,aAAO,IAAI,IAAI,IAAI;AAAA,IACzB;AACI,UAAM,KAAK,MAAM;AACjB,UAAM,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,WAAW,EAAE;AAChD,UAAM,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,WAAW,GAAG,MAAM,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC;AAC3E,UAAM,IAAI,KAAK,KAAK,QAAQ,KAAK,GAAG,cAAc;AAClD,UAAM,IAAI,KAAK,KAAK,SAAS,KAAK,GAAG,eAAe;AACpD,WAAO,IAAI,IAAI;AAAA,MACb;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,IACd,CAAK;AAAA,EACL,OAAS;AACL,WAAO,IAAI,IAAI,IAAI;AAAA,EACvB;AACA;AACO,SAAS,QAAQ,IAAI,WAAW,SAAS;AAC9C,MAAI,OAAO,GAAG,YAAY,YAAa,QAAO;AAAA,IAC5C,UAAU,QAAQ,QAAO;AAAA,EAC1B;AACD,MAAI;AACJ,MAAI;AACF,gBAAY,GAAG,QAAQ,WAAW,OAAO;AAAA,EAC1C,SAAQ,KAAK;AACZ,WAAO;AAAA,MACL,UAAU,QAAQ,QAAO;AAAA,IAC1B;AAAA,EACL;AACE,MAAI,OAAO,UAAU,aAAa,aAAa;AAC7C,cAAU,WAAW,IAAI,QAAQ,aAAW;AAC1C,gBAAU,WAAW,MAAM;AACzB,gBAAQ,SAAS;AAAA,MAClB;AAAA,IACP,CAAK;AAAA,EACL;AACE,SAAO;AACT;","names":[],"sources":["../../../../../../../node_modules/vuetify/lib/util/animation.mjs"],"sourcesContent":["// Utilities\nimport { Box } from \"./box.mjs\";\n/** @see https://stackoverflow.com/a/57876601/2074736 */\nexport function nullifyTransforms(el) {\n  const rect = el.getBoundingClientRect();\n  const style = getComputedStyle(el);\n  const tx = style.transform;\n  if (tx) {\n    let ta, sx, sy, dx, dy;\n    if (tx.startsWith('matrix3d(')) {\n      ta = tx.slice(9, -1).split(/, /);\n      sx = Number(ta[0]);\n      sy = Number(ta[5]);\n      dx = Number(ta[12]);\n      dy = Number(ta[13]);\n    } else if (tx.startsWith('matrix(')) {\n      ta = tx.slice(7, -1).split(/, /);\n      sx = Number(ta[0]);\n      sy = Number(ta[3]);\n      dx = Number(ta[4]);\n      dy = Number(ta[5]);\n    } else {\n      return new Box(rect);\n    }\n    const to = style.transformOrigin;\n    const x = rect.x - dx - (1 - sx) * parseFloat(to);\n    const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(' ') + 1));\n    const w = sx ? rect.width / sx : el.offsetWidth + 1;\n    const h = sy ? rect.height / sy : el.offsetHeight + 1;\n    return new Box({\n      x,\n      y,\n      width: w,\n      height: h\n    });\n  } else {\n    return new Box(rect);\n  }\n}\nexport function animate(el, keyframes, options) {\n  if (typeof el.animate === 'undefined') return {\n    finished: Promise.resolve()\n  };\n  let animation;\n  try {\n    animation = el.animate(keyframes, options);\n  } catch (err) {\n    return {\n      finished: Promise.resolve()\n    };\n  }\n  if (typeof animation.finished === 'undefined') {\n    animation.finished = new Promise(resolve => {\n      animation.onfinish = () => {\n        resolve(animation);\n      };\n    });\n  }\n  return animation;\n}\n//# sourceMappingURL=animation.mjs.map"],"version":3}