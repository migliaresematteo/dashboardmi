{"file":"defineComponent.mjs","mappings":";;;;;AAUO,SAAS,gBAAgB,SAAS;AACvC,UAAQ,SAAS,QAAQ,UAAU,QAAQ;AAC3C,MAAI,CAAC,QAAQ,MAAM;AACjB,gBAAY,kFAAkF;AAC9F,WAAO;AAAA,EACX;AACE,MAAI,QAAQ,QAAQ;AAClB,YAAQ,QAAQ,aAAa,QAAQ,SAAS,IAAI,QAAQ,IAAI,EAAG;AACjE,UAAM,WAAW,OAAO,KAAK,QAAQ,KAAK,EAAE,OAAO,SAAO,QAAQ,WAAW,QAAQ,OAAO;AAC5F,YAAQ,cAAc,SAAS,YAAY,OAAO;AAChD,aAAO,KAAK,OAAO,QAAQ;AAAA,IAC5B;AACD,YAAQ,MAAM,MAAM;AACpB,YAAQ,QAAQ,SAAS,MAAM,OAAO,KAAK;AACzC,YAAM,WAAW,eAAgB;AAGjC,UAAI,CAAC,SAAS,MAAO,QAAO,QAAQ,OAAO,OAAO,GAAG;AACrD,YAAM;AAAA,QACJ,OAAO;AAAA,QACP;AAAA,MACR,IAAU,oBAAoB,OAAO,MAAM,OAAO,QAAQ,MAAM,QAAQ;AAClE,YAAM,gBAAgB,QAAQ,OAAO,QAAQ,GAAG;AAChD,yBAAoB;AACpB,aAAO;AAAA,IACR;AAAA,EACL;AACE,SAAO;AACT;AASO,SAAS,mBAAmB;AACjC,MAAI,iBAAiB,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AACzF,SAAO,cAAY,iBAAiB,kBAAkBA,mBAAkB,OAAO;AACjF;AACO,SAAS,0BAA0B,OAAO,QAAQ;AACvD,SAAO,QAAQ;AACf,SAAO;AACT;","names":["_defineComponent"],"sources":["../../../../../../../node_modules/vuetify/lib/util/defineComponent.mjs"],"sourcesContent":["// Composables\nimport { injectDefaults, internalUseDefaults } from \"../composables/defaults.mjs\"; // Utilities\nimport { defineComponent as _defineComponent // eslint-disable-line no-restricted-imports\n} from 'vue';\nimport { consoleWarn } from \"./console.mjs\";\nimport { pick } from \"./helpers.mjs\";\nimport { propsFactory } from \"./propsFactory.mjs\"; // Types\n// No props\n// Object Props\n// Implementation\nexport function defineComponent(options) {\n  options._setup = options._setup ?? options.setup;\n  if (!options.name) {\n    consoleWarn('The component is missing an explicit name, unable to generate default prop value');\n    return options;\n  }\n  if (options._setup) {\n    options.props = propsFactory(options.props ?? {}, options.name)();\n    const propKeys = Object.keys(options.props).filter(key => key !== 'class' && key !== 'style');\n    options.filterProps = function filterProps(props) {\n      return pick(props, propKeys);\n    };\n    options.props._as = String;\n    options.setup = function setup(props, ctx) {\n      const defaults = injectDefaults();\n\n      // Skip props proxy if defaults are not provided\n      if (!defaults.value) return options._setup(props, ctx);\n      const {\n        props: _props,\n        provideSubDefaults\n      } = internalUseDefaults(props, props._as ?? options.name, defaults);\n      const setupBindings = options._setup(_props, ctx);\n      provideSubDefaults();\n      return setupBindings;\n    };\n  }\n  return options;\n}\n\n// No argument - simple default slot\n\n// Generic constructor argument - generic props and slots\n\n// Slots argument - simple slots\n\n// Implementation\nexport function genericComponent() {\n  let exposeDefaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  return options => (exposeDefaults ? defineComponent : _defineComponent)(options);\n}\nexport function defineFunctionalComponent(props, render) {\n  render.props = props;\n  return render;\n}\n\n// Adds a filterProps method to the component options\n\n// https://github.com/vuejs/core/pull/10557\n\n// not a vue Component\n//# sourceMappingURL=defineComponent.mjs.map"],"version":3}